{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { Storage } from \"expo-storage\";\nvar initialState = {\n  userLogin: {}\n};\nvar URL = \"http://192.168.1.6:5000\";\nexport var userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    login: function () {\n      var _login = _asyncToGenerator(function* (state, action) {\n        var email = action.payload.email;\n        var password = action.payload.password;\n        try {\n          var config = {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          var _yield$axios$post = yield axios.post(URL + \"/api/users/login\", {\n              email: email,\n              password: password\n            }, config),\n            data = _yield$axios$post.data;\n          yield Storage.setItem({\n            key: \"userInfo\",\n            value: JSON.stringify(data)\n          });\n          console.log(data);\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      function login(_x, _x2) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }\n});\n\nvar login = userSlice.actions.login;\nexport { login };\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","Storage","initialState","userLogin","URL","userSlice","name","reducers","login","state","action","email","payload","password","config","headers","axios","post","data","setItem","key","value","JSON","stringify","console","log","error","actions","reducer"],"sources":["F:/DoAn/DACN1/ShopApp/src/Redux/slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Storage } from \"expo-storage\";\r\n\r\nconst initialState = {\r\n  userLogin: {},\r\n};\r\nconst URL = `http://192.168.1.6:5000`;\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    login: async (state, action) => {\r\n      const email = action.payload.email;\r\n      const password = action.payload.password;\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n          `${URL}/api/users/login`,\r\n          {\r\n            email,\r\n            password,\r\n          },\r\n          config\r\n        );\r\n        await Storage.setItem({ key: \"userInfo\", value: JSON.stringify(data) });\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n        // dispatch({\r\n        //   type: USER_LOGIN_FAIL,\r\n        //   payload:\r\n        //     error.response && error.response.data.message\r\n        //       ? error.response.data.message\r\n        //       : error.message,\r\n        // });\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { login } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,cAAc;AAEtC,IAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,CAAC;AACd,CAAC;AACD,IAAMC,GAAG,4BAA4B;AACrC,OAAO,IAAMC,SAAS,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,MAAM;EACZJ,YAAY,EAAZA,YAAY;EACZK,QAAQ,EAAE;IACRC,KAAK;MAAA,+BAAE,WAAOC,KAAK,EAAEC,MAAM,EAAK;QAC9B,IAAMC,KAAK,GAAGD,MAAM,CAACE,OAAO,CAACD,KAAK;QAClC,IAAME,QAAQ,GAAGH,MAAM,CAACE,OAAO,CAACC,QAAQ;QACxC,IAAI;UACF,IAAMC,MAAM,GAAG;YACbC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CAAC;UAED,8BAAuBC,KAAK,CAACC,IAAI,CAC5Bb,GAAG,uBACN;cACEO,KAAK,EAALA,KAAK;cACLE,QAAQ,EAARA;YACF,CAAC,EACDC,MAAM,CACP;YAPOI,IAAI,qBAAJA,IAAI;UAQZ,MAAMjB,OAAO,CAACkB,OAAO,CAAC;YAAEC,GAAG,EAAE,UAAU;YAAEC,KAAK,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;UAAE,CAAC,CAAC;UACvEM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;QACnB,CAAC,CAAC,OAAOQ,KAAK,EAAE;UACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;QAQpB;MACF,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EACH;AACF,CAAC,CAAC;;AAGK,IAAQlB,KAAK,GAAKH,SAAS,CAACsB,OAAO,CAA3BnB,KAAK;AAAuB;AAE3C,eAAeH,SAAS,CAACuB,OAAO"},"metadata":{},"sourceType":"module"}