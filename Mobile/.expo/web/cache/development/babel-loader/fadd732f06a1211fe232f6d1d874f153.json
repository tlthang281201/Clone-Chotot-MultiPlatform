{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Button, Image, Text, View } from \"native-base\";\nimport { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { StorageClient } from \"@supabase/storage-js\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction TestScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    uploading = _useState2[0],\n    setUploading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    avatarUrl = _useState4[0],\n    setAvatarUrl = _useState4[1];\n  var avatarSize = {\n    height: 150,\n    width: 150\n  };\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    image = _useState6[0],\n    setImage = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    a1 = _useState8[0],\n    setA = _useState8[1];\n  var STORAGE_URL = \"https://ngfxbagkjhxyputmwoxp.supabase.co/storage/v1\";\n  var SERVICE_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5nZnhiYWdramh4eXB1dG13b3hwIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY3MDIyMDE2NSwiZXhwIjoxOTg1Nzk2MTY1fQ.v1Bml2eA_eQno7gMBfDbtgLiyovkVs9orOz1w_89aVI\";\n\n  var storageClient = new StorageClient(STORAGE_URL, {\n    apikey: SERVICE_KEY,\n    Authorization: \"Bearer \" + SERVICE_KEY\n  });\n  useEffect(function () {\n    var a = _toConsumableArray(image);\n    setA(a);\n    console.log(a1);\n  }, [image]);\n  function get() {\n    return _get.apply(this, arguments);\n  }\n  function _get() {\n    _get = _asyncToGenerator(function* () {\n      var _yield$storageClient$ = yield storageClient.from(\"ecomme\").getPublicUrl(image),\n        data = _yield$storageClient$.data,\n        error = _yield$storageClient$.error;\n      setAvatarUrl(data.publicUrl);\n    });\n    return _get.apply(this, arguments);\n  }\n  function uploadAvatar() {\n    return _uploadAvatar.apply(this, arguments);\n  }\n  function _uploadAvatar() {\n    _uploadAvatar = _asyncToGenerator(function* () {\n      try {\n        setUploading(true);\n        var result = yield ImagePicker.launchImageLibraryAsync({\n          allowsMultipleSelection: true,\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          quality: 1\n        });\n        var fileName = result.assets[0].uri.replace(/^.*[\\\\\\/]/, \"\");\n        setImage(result);\n        var ext = result.assets[0].uri.substring(result.assets[0].uri.lastIndexOf(\".\") + 1);\n        var formData = new FormData();\n        formData.append(\"files\", {\n          uri: result.assets[0].uri,\n          name: fileName,\n          type: \"image/\" + ext\n        });\n        console.log(image);\n\n      } catch (error) {} finally {\n        setUploading(false);\n      }\n    });\n    return _uploadAvatar.apply(this, arguments);\n  }\n  return _jsx(View, {\n    children: _jsxs(View, {\n      children: [_jsx(Button, {\n        title: uploading ? \"Uploading ...\" : \"Upload\",\n        onPress: function onPress() {\n          return uploadAvatar();\n        },\n        disabled: uploading,\n        children: \"Up\"\n      }), _jsx(Button, {\n        title: uploading ? \"Uploading ...\" : \"Upload\",\n        onPress: function onPress() {\n          return get();\n        },\n        disabled: uploading,\n        children: \"GET\"\n      }), avatarUrl != null ? _jsx(Image, {\n        source: {\n          uri: avatarUrl\n        },\n        alt: \"a\",\n        accessibilityLabel: \"Avatar\",\n        style: [avatarSize, styles.avatar, styles.image]\n      }) : \"\"]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  avatar: {\n    borderRadius: 5,\n    overflow: \"hidden\",\n    maxWidth: \"100%\"\n  },\n  image: {\n    objectFit: \"cover\",\n    paddingTop: 0\n  },\n  noImage: {\n    backgroundColor: \"#333\",\n    border: \"1px solid rgb(200, 200, 200)\",\n    borderRadius: 5\n  }\n});\nexport default TestScreen;","map":{"version":3,"names":["Button","Image","Text","View","useEffect","useState","StorageClient","ImagePicker","TestScreen","uploading","setUploading","avatarUrl","setAvatarUrl","avatarSize","height","width","image","setImage","a1","setA","STORAGE_URL","SERVICE_KEY","storageClient","apikey","Authorization","a","console","log","get","from","getPublicUrl","data","error","publicUrl","uploadAvatar","result","launchImageLibraryAsync","allowsMultipleSelection","mediaTypes","MediaTypeOptions","All","quality","fileName","assets","uri","replace","ext","substring","lastIndexOf","formData","FormData","append","name","type","styles","avatar","StyleSheet","create","borderRadius","overflow","maxWidth","objectFit","paddingTop","noImage","backgroundColor","border"],"sources":["F:/DoAn/DACN1/ShopApp/src/Screens/TestScreen.js"],"sourcesContent":["import { Button, Image, Text, View } from \"native-base\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { StorageClient } from \"@supabase/storage-js\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nfunction TestScreen() {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [avatarUrl, setAvatarUrl] = useState(null);\r\n  const avatarSize = { height: 150, width: 150 };\r\n  const [image, setImage] = useState();\r\n  const [a1, setA] = useState([]);\r\n  const STORAGE_URL = \"https://ngfxbagkjhxyputmwoxp.supabase.co/storage/v1\";\r\n  const SERVICE_KEY =\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5nZnhiYWdramh4eXB1dG13b3hwIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY3MDIyMDE2NSwiZXhwIjoxOTg1Nzk2MTY1fQ.v1Bml2eA_eQno7gMBfDbtgLiyovkVs9orOz1w_89aVI\"; //! service key, not anon key\r\n\r\n  const storageClient = new StorageClient(STORAGE_URL, {\r\n    apikey: SERVICE_KEY,\r\n    Authorization: `Bearer ${SERVICE_KEY}`,\r\n  });\r\n  useEffect(() => {\r\n    let a = [...image];\r\n    setA(a);\r\n    console.log(a1);\r\n  }, [image]);\r\n  async function get() {\r\n    const { data, error } = await storageClient\r\n      .from(\"ecomme\")\r\n      .getPublicUrl(image);\r\n    setAvatarUrl(data.publicUrl);\r\n  }\r\n  async function uploadAvatar() {\r\n    try {\r\n      setUploading(true);\r\n\r\n      let result = await ImagePicker.launchImageLibraryAsync({\r\n        allowsMultipleSelection: true,\r\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n        quality: 1,\r\n      });\r\n      const fileName = result.assets[0].uri.replace(/^.*[\\\\\\/]/, \"\");\r\n      setImage(result);\r\n      const ext = result.assets[0].uri.substring(\r\n        result.assets[0].uri.lastIndexOf(\".\") + 1\r\n      );\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"files\", {\r\n        uri: result.assets[0].uri,\r\n        name: fileName,\r\n        type: `image/${ext}`,\r\n      });\r\n      console.log(image);\r\n      // const formData = new FormData();\r\n      // formData.append(\"image\", photo);\r\n\r\n      // const fileExt = photo.name.split(\".\").pop();\r\n      // const filePath = `${Math.random()}.${fileExt}`;\r\n\r\n      // const { data, error } = await storageClient\r\n      //   .from(\"ecomme\")\r\n      //   .upload(fileName, formData);\r\n\r\n      // if (error) {\r\n      //   throw error;\r\n      // }\r\n      // console.log(fileName);\r\n      // if (!result.canceled) {\r\n      //   setImage(fileName);\r\n      //   console.log(fileName);\r\n      // }\r\n    } catch (error) {\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <View>\r\n        <Button\r\n          title={uploading ? \"Uploading ...\" : \"Upload\"}\r\n          onPress={() => uploadAvatar()}\r\n          disabled={uploading}\r\n        >\r\n          Up\r\n        </Button>\r\n        <Button\r\n          title={uploading ? \"Uploading ...\" : \"Upload\"}\r\n          onPress={() => get()}\r\n          disabled={uploading}\r\n        >\r\n          GET\r\n        </Button>\r\n        {avatarUrl != null ? (\r\n          <Image\r\n            source={{\r\n              uri: avatarUrl,\r\n            }}\r\n            alt=\"a\"\r\n            accessibilityLabel=\"Avatar\"\r\n            style={[avatarSize, styles.avatar, styles.image]}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  avatar: {\r\n    borderRadius: 5,\r\n    overflow: \"hidden\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  image: {\r\n    objectFit: \"cover\",\r\n    paddingTop: 0,\r\n  },\r\n  noImage: {\r\n    backgroundColor: \"#333\",\r\n    border: \"1px solid rgb(200, 200, 200)\",\r\n    borderRadius: 5,\r\n  },\r\n});\r\nexport default TestScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}