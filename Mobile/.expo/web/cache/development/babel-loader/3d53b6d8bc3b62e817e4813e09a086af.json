{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { Center, Pressable } from \"native-base\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Colors from \"../color\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AntDesign, FontAwesome, Ionicons, MaterialCommunityIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport CartScreen from \"../Screens/CartScreen\";\nimport StackNav from \"./StackNav\";\nimport ProfileScreen2 from \"../Screens/ProfileScreen2\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction BottomNav() {\n  return _jsxs(Tab.Navigator, {\n    backBehavior: \"Main\",\n    initialRouteName: \"Main\",\n    screenOptions: {\n      tabBarStyle: _objectSpread({}, styles.tab),\n      headerShown: false,\n      tabBarHideOnKeyboard: true\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Trang ch\\u1EE7\",\n      component: StackNav,\n      options: {\n        tabBarActiveTintColor: '#FFA500',\n        tabBarInactiveTintColor: 'gray',\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused;\n          return _jsx(Center, {\n            children: focused ? _jsx(Ionicons, {\n              name: \"home-sharp\",\n              size: 24,\n              color: \"#FFA500\"\n            }) : _jsx(Ionicons, {\n              name: \"home-outline\",\n              size: 24,\n              color: \"gray\"\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Cart\",\n      component: CartScreen,\n      options: {\n        tabBarActiveTintColor: '#FFA500',\n        tabBarInactiveTintColor: 'gray',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsx(Center, {\n            children: focused ? _jsx(SimpleLineIcons, {\n              name: \"note\",\n              size: 24,\n              color: \"black\"\n            }) : _jsx(SimpleLineIcons, {\n              name: \"note\",\n              size: 24,\n              color: \"gray\"\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"C\\xE1 nh\\xE2n\",\n      component: ProfileScreen2,\n      options: {\n        tabBarActiveTintColor: '#FFA500',\n        tabBarInactiveTintColor: 'gray',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(Center, {\n            children: focused ? _jsx(FontAwesome, {\n              name: \"user\",\n              size: 24,\n              color: \"#FFA500\"\n            }) : _jsx(FontAwesome, {\n              name: \"user-o\",\n              size: 24,\n              color: \"gray\"\n            })\n          });\n        }\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  tab: {\n    elevation: 0,\n    backgroundColor: Colors.white,\n    height: 50\n  }\n});\nexport default BottomNav;","map":{"version":3,"names":["React","Center","Pressable","createBottomTabNavigator","Colors","AntDesign","FontAwesome","Ionicons","MaterialCommunityIcons","SimpleLineIcons","ProfileScreen","CartScreen","StackNav","ProfileScreen2","Tab","BottomNav","tabBarStyle","styles","tab","headerShown","tabBarHideOnKeyboard","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarIcon","focused","StyleSheet","create","elevation","backgroundColor","white","height"],"sources":["F:/DoAn/DACN1/ShopApp/src/Navigations/BottomNav.js"],"sourcesContent":["import React from \"react\";\r\nimport { Center, Pressable } from \"native-base\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Colors from \"../color\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport {\r\n  AntDesign,\r\n  FontAwesome,\r\n  Ionicons,\r\n  MaterialCommunityIcons,\r\n  SimpleLineIcons \r\n} from \"@expo/vector-icons\";\r\nimport ProfileScreen from \"../Screens/ProfileScreen\";\r\nimport CartScreen from \"../Screens/CartScreen\";\r\nimport StackNav from \"./StackNav\";\r\nimport ProfileScreen2 from \"../Screens/ProfileScreen2\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction BottomNav() {\r\n  return (\r\n    <Tab.Navigator\r\n      backBehavior=\"Main\"\r\n      initialRouteName=\"Main\"\r\n      screenOptions={{\r\n        \r\n        tabBarStyle: { ...styles.tab },\r\n        headerShown: false,\r\n        tabBarHideOnKeyboard: true,\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Trang chủ\"\r\n        component={StackNav}\r\n        options={{\r\n          tabBarActiveTintColor: '#FFA500',\r\n          tabBarInactiveTintColor: 'gray',\r\n          tabBarIcon: ({ focused }) => (\r\n            <Center>\r\n              {focused ? (\r\n                <Ionicons name=\"home-sharp\" size={24} color=\"#FFA500\" />\r\n                \r\n              ) : (\r\n                <Ionicons name=\"home-outline\" size={24} color=\"gray\" />\r\n              )}\r\n            </Center>\r\n          ),\r\n        }}\r\n      />\r\n      {/* CART */}\r\n      <Tab.Screen\r\n        name=\"Cart\"\r\n        component={CartScreen}\r\n        options={{\r\n          tabBarActiveTintColor: '#FFA500',\r\n          tabBarInactiveTintColor: 'gray',\r\n          tabBarIcon: ({ focused }) => (\r\n            <Center>\r\n              {focused ? (\r\n                <SimpleLineIcons name=\"note\" size={24} color=\"black\" />\r\n              ) : (\r\n                <SimpleLineIcons name=\"note\" size={24} color=\"gray\" />\r\n              )}\r\n            </Center>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {/* PROFILE */}\r\n\r\n      <Tab.Screen\r\n        name=\"Cá nhân\"\r\n        component={ProfileScreen2}\r\n        options={{\r\n          tabBarActiveTintColor: '#FFA500',\r\n          tabBarInactiveTintColor: 'gray',\r\n          tabBarIcon: ({ focused }) => (\r\n            <Center>\r\n              {focused ? (\r\n                <FontAwesome name=\"user\" size={24} color=\"#FFA500\" />\r\n              ) : (\r\n                <FontAwesome name=\"user-o\" size={24} color=\"gray\" />\r\n              )}\r\n            </Center>\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tab: {\r\n    elevation: 0,\r\n    backgroundColor: Colors.white,\r\n    height: 50,\r\n  },\r\n});\r\n\r\nexport default BottomNav;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,SAAS,QAAQ,aAAa;AAC/C,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,MAAM;AAAiB;AAE9B,SACEC,SAAS,EACTC,WAAW,EACXC,QAAQ,EACRC,sBAAsB,EACtBC,eAAe,QACV,oBAAoB;AAC3B,OAAOC,aAAa;AACpB,OAAOC,UAAU;AACjB,OAAOC,QAAQ;AACf,OAAOC,cAAc;AAAkC;AAAA;AAEvD,IAAMC,GAAG,GAAGX,wBAAwB,EAAE;AAEtC,SAASY,SAAS,GAAG;EACnB,OACE,MAAC,GAAG,CAAC,SAAS;IACZ,YAAY,EAAC,MAAM;IACnB,gBAAgB,EAAC,MAAM;IACvB,aAAa,EAAE;MAEbC,WAAW,oBAAOC,MAAM,CAACC,GAAG,CAAE;MAC9BC,WAAW,EAAE,KAAK;MAClBC,oBAAoB,EAAE;IACxB,CAAE;IAAA,WAEF,KAAC,GAAG,CAAC,MAAM;MACT,IAAI,EAAC,gBAAW;MAChB,SAAS,EAAER,QAAS;MACpB,OAAO,EAAE;QACPS,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BC,UAAU,EAAE;UAAA,IAAGC,OAAO,QAAPA,OAAO;UAAA,OACpB,KAAC,MAAM;YAAA,UACJA,OAAO,GACN,KAAC,QAAQ;cAAC,IAAI,EAAC,YAAY;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAS,EAAG,GAGxD,KAAC,QAAQ;cAAC,IAAI,EAAC,cAAc;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAM;UACrD,EACM;QAAA;MAEb;IAAE,EACF,EAEF,KAAC,GAAG,CAAC,MAAM;MACT,IAAI,EAAC,MAAM;MACX,SAAS,EAAEb,UAAW;MACtB,OAAO,EAAE;QACPU,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BC,UAAU,EAAE;UAAA,IAAGC,OAAO,SAAPA,OAAO;UAAA,OACpB,KAAC,MAAM;YAAA,UACJA,OAAO,GACN,KAAC,eAAe;cAAC,IAAI,EAAC,MAAM;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAO,EAAG,GAEvD,KAAC,eAAe;cAAC,IAAI,EAAC,MAAM;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAM;UACpD,EACM;QAAA;MAEb;IAAE,EACF,EAIF,KAAC,GAAG,CAAC,MAAM;MACT,IAAI,EAAC,eAAS;MACd,SAAS,EAAEX,cAAe;MAC1B,OAAO,EAAE;QACPQ,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BC,UAAU,EAAE;UAAA,IAAGC,OAAO,SAAPA,OAAO;UAAA,OACpB,KAAC,MAAM;YAAA,UACJA,OAAO,GACN,KAAC,WAAW;cAAC,IAAI,EAAC,MAAM;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAS,EAAG,GAErD,KAAC,WAAW;cAAC,IAAI,EAAC,QAAQ;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAM;UAClD,EACM;QAAA;MAEb;IAAE,EACF;EAAA,EACY;AAEpB;AAEA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC/BR,GAAG,EAAE;IACHS,SAAS,EAAE,CAAC;IACZC,eAAe,EAAExB,MAAM,CAACyB,KAAK;IAC7BC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAef,SAAS"},"metadata":{},"sourceType":"module"}