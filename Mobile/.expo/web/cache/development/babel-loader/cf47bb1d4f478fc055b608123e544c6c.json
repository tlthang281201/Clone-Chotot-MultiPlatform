{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Box, Text, ScrollView, Image, Heading, HStack, Spacer } from \"native-base\";\nimport React, { useState } from \"react\";\nimport Colors from \"../color\";\nimport Rating from \"../Components/Rating\";\nimport NumbericInput from \"react-native-numeric-input\";\nimport Buttone from \"../Components/Buttone\";\nimport Review from \"../Components/Review\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction SingleProductScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var navigation = useNavigation();\n  var product = route.params;\n  return _jsx(Box, {\n    safeAreaTop: true,\n    flex: 1,\n    bg: Colors.white,\n    children: _jsxs(ScrollView, {\n      px: 5,\n      showsVerticalScrollIndicator: false,\n      children: [_jsx(Image, {\n        source: {\n          uri: product.image\n        },\n        alt: \"image\",\n        w: \"full\",\n        h: 300,\n        resizeMode: \"contain\"\n      }), _jsx(Heading, {\n        bold: true,\n        fontSize: 15,\n        mb: 2,\n        lineHeight: 22,\n        children: product.name\n      }), _jsx(Rating, {\n        value: product.rating,\n        text: product.numReviews + \" reviews\"\n      }), _jsxs(HStack, {\n        space: 2,\n        alignItems: \"center\",\n        my: 5,\n        children: [product.countInStock > 0 ? _jsxs(_Fragment, {\n          children: [_jsx(NumbericInput, {\n            value: value,\n            totalHeight: 30,\n            totalWidth: 140,\n            iconSize: 25,\n            step: 1,\n            maxValue: product.countInStock,\n            minValue: 0,\n            borderColor: Colors.deepGray,\n            rounded: true,\n            textColor: Colors.black,\n            iconStyle: {\n              color: Colors.white\n            },\n            rightButtonBackgroundColor: Colors.main,\n            leftButtonBackgroundColor: Colors.main\n          }), _jsx(Spacer, {})]\n        }) : _jsx(Heading, {\n          bold: true,\n          color: Colors.red,\n          italic: true,\n          fontSize: 10,\n          children: \"Out of stock\"\n        }), _jsx(Spacer, {}), _jsxs(Heading, {\n          bold: true,\n          color: Colors.black,\n          fontSize: 19,\n          children: [\"$\", product.price]\n        })]\n      }), _jsx(Text, {\n        lineHeight: 24,\n        fontSize: 12\n      }), _jsx(Buttone, {\n        bg: Colors.main,\n        color: Colors.white,\n        mt: 10,\n        children: \"ADD TO CART\"\n      }), _jsx(Review, {})]\n    })\n  });\n}\nexport default SingleProductScreen;","map":{"version":3,"names":["Box","Text","ScrollView","Image","Heading","HStack","Spacer","React","useState","Colors","Rating","NumbericInput","Buttone","Review","useNavigation","SingleProductScreen","route","value","setValue","navigation","product","params","white","uri","image","name","rating","numReviews","countInStock","deepGray","black","color","main","red","price"],"sources":["F:/DoAn/DACN1/ShopApp/src/Screens/SingleProductScreen.js"],"sourcesContent":["import {\r\n  Box,\r\n  Text,\r\n  ScrollView,\r\n  Image,\r\n  Heading,\r\n  HStack,\r\n  Spacer,\r\n} from \"native-base\";\r\nimport React, { useState } from \"react\";\r\nimport Colors from \"../color\";\r\nimport Rating from \"../Components/Rating\";\r\nimport NumbericInput from \"react-native-numeric-input\";\r\nimport Buttone from \"../Components/Buttone\";\r\nimport Review from \"../Components/Review\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nfunction SingleProductScreen({ route }) {\r\n  const [value, setValue] = useState(0);\r\n  const navigation = useNavigation();\r\n  const product = route.params;\r\n  return (\r\n    <Box safeAreaTop flex={1} bg={Colors.white}>\r\n      <ScrollView px={5} showsVerticalScrollIndicator={false}>\r\n        <Image\r\n          source={{ uri: product.image }}\r\n          alt=\"image\"\r\n          w=\"full\"\r\n          h={300}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <Heading bold fontSize={15} mb={2} lineHeight={22}>\r\n          {product.name}\r\n        </Heading>\r\n        <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n        <HStack space={2} alignItems=\"center\" my={5}>\r\n          {product.countInStock > 0 ? (\r\n            <>\r\n              <NumbericInput\r\n                value={value}\r\n                totalHeight={30}\r\n                totalWidth={140}\r\n                iconSize={25}\r\n                step={1}\r\n                maxValue={product.countInStock}\r\n                minValue={0}\r\n                borderColor={Colors.deepGray}\r\n                rounded\r\n                textColor={Colors.black}\r\n                iconStyle={{ color: Colors.white }}\r\n                rightButtonBackgroundColor={Colors.main}\r\n                leftButtonBackgroundColor={Colors.main}\r\n              />\r\n              <Spacer />\r\n            </>\r\n          ) : (\r\n            <Heading bold color={Colors.red} italic fontSize={10}>\r\n              Out of stock\r\n            </Heading>\r\n          )}\r\n          <Spacer />\r\n          <Heading bold color={Colors.black} fontSize={19}>\r\n            ${product.price}\r\n          </Heading>\r\n        </HStack>\r\n        <Text lineHeight={24} fontSize={12}>\r\n          \r\n        </Text>\r\n        <Buttone bg={Colors.main} color={Colors.white} mt={10}>\r\n          ADD TO CART\r\n        </Buttone>\r\n        <Review />\r\n      </ScrollView>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SingleProductScreen;\r\n"],"mappings":";AAAA,SACEA,GAAG,EACHC,IAAI,EACJC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MAAM,QACD,aAAa;AACpB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,OAAO;AACd,OAAOC,MAAM;AACb,SAASC,aAAa,QAAQ,0BAA0B;AAAC;AAAA;AAAA;AAEzD,SAASC,mBAAmB,OAAY;EAAA,IAATC,KAAK,QAALA,KAAK;EAClC,gBAA0BR,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA9BS,KAAK;IAAEC,QAAQ;EACtB,IAAMC,UAAU,GAAGL,aAAa,EAAE;EAClC,IAAMM,OAAO,GAAGJ,KAAK,CAACK,MAAM;EAC5B,OACE,KAAC,GAAG;IAAC,WAAW;IAAC,IAAI,EAAE,CAAE;IAAC,EAAE,EAAEZ,MAAM,CAACa,KAAM;IAAA,UACzC,MAAC,UAAU;MAAC,EAAE,EAAE,CAAE;MAAC,4BAA4B,EAAE,KAAM;MAAA,WACrD,KAAC,KAAK;QACJ,MAAM,EAAE;UAAEC,GAAG,EAAEH,OAAO,CAACI;QAAM,CAAE;QAC/B,GAAG,EAAC,OAAO;QACX,CAAC,EAAC,MAAM;QACR,CAAC,EAAE,GAAI;QACP,UAAU,EAAC;MAAS,EACpB,EACF,KAAC,OAAO;QAAC,IAAI;QAAC,QAAQ,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAC,UAAU,EAAE,EAAG;QAAA,UAC/CJ,OAAO,CAACK;MAAI,EACL,EACV,KAAC,MAAM;QAAC,KAAK,EAAEL,OAAO,CAACM,MAAO;QAAC,IAAI,EAAKN,OAAO,CAACO,UAAU;MAAW,EAAG,EACxE,MAAC,MAAM;QAAC,KAAK,EAAE,CAAE;QAAC,UAAU,EAAC,QAAQ;QAAC,EAAE,EAAE,CAAE;QAAA,WACzCP,OAAO,CAACQ,YAAY,GAAG,CAAC,GACvB;UAAA,WACE,KAAC,aAAa;YACZ,KAAK,EAAEX,KAAM;YACb,WAAW,EAAE,EAAG;YAChB,UAAU,EAAE,GAAI;YAChB,QAAQ,EAAE,EAAG;YACb,IAAI,EAAE,CAAE;YACR,QAAQ,EAAEG,OAAO,CAACQ,YAAa;YAC/B,QAAQ,EAAE,CAAE;YACZ,WAAW,EAAEnB,MAAM,CAACoB,QAAS;YAC7B,OAAO;YACP,SAAS,EAAEpB,MAAM,CAACqB,KAAM;YACxB,SAAS,EAAE;cAAEC,KAAK,EAAEtB,MAAM,CAACa;YAAM,CAAE;YACnC,0BAA0B,EAAEb,MAAM,CAACuB,IAAK;YACxC,yBAAyB,EAAEvB,MAAM,CAACuB;UAAK,EACvC,EACF,KAAC,MAAM,KAAG;QAAA,EACT,GAEH,KAAC,OAAO;UAAC,IAAI;UAAC,KAAK,EAAEvB,MAAM,CAACwB,GAAI;UAAC,MAAM;UAAC,QAAQ,EAAE,EAAG;UAAA;QAAA,EAGtD,EACD,KAAC,MAAM,KAAG,EACV,MAAC,OAAO;UAAC,IAAI;UAAC,KAAK,EAAExB,MAAM,CAACqB,KAAM;UAAC,QAAQ,EAAE,EAAG;UAAA,gBAC5CV,OAAO,CAACc,KAAK;QAAA,EACP;MAAA,EACH,EACT,KAAC,IAAI;QAAC,UAAU,EAAE,EAAG;QAAC,QAAQ,EAAE;MAAG,EAE5B,EACP,KAAC,OAAO;QAAC,EAAE,EAAEzB,MAAM,CAACuB,IAAK;QAAC,KAAK,EAAEvB,MAAM,CAACa,KAAM;QAAC,EAAE,EAAE,EAAG;QAAA;MAAA,EAE5C,EACV,KAAC,MAAM,KAAG;IAAA;EACC,EACT;AAEV;AAEA,eAAeP,mBAAmB"},"metadata":{},"sourceType":"module"}