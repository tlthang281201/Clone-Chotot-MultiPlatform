{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeBaseProvider, StatusBar, View } from \"native-base\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport BottomNav from \"./src/Navigations/BottomNav\";\nimport LoginScreen2 from \"./src/Screens/LoginScreen2\";\nimport RegisterScreen2 from \"./src/Screens/RegisterScreen2\";\nimport SimiliarProductScreen from \"./src/Screens/SimiliarProductScreen\";\nimport UpdateProfileScreen from \"./src/Screens/UpdateProfileScreen\";\nimport { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Provider, useSelector } from \"react-redux\";\nimport store from \"./src/Redux/Store\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userID = _useState4[0],\n    setUserID = _useState4[1];\n  var getData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var jsonValue = yield AsyncStorage.getItem(\"userInfo\");\n        var userInfo = jsonValue != null ? JSON.parse(jsonValue) : null;\n      } catch (e) {\n        console.log(e);\n      }\n    });\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n  if (isLoading) {\n    return _jsx(NativeBaseProvider, {\n      children: _jsx(View, {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: _jsx(ActivityIndicator, {\n          size: \"large\"\n        })\n      })\n    });\n  }\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(NativeBaseProvider, {\n      children: _jsxs(NavigationContainer, {\n        children: [_jsx(StatusBar, {\n          hidden: true\n        }), userID != null ? _jsxs(Stack.Navigator, {\n          initialRouteName: \"Bottom\",\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"Login\",\n            component: LoginScreen2\n          }), _jsx(Stack.Screen, {\n            name: \"Register\",\n            component: RegisterScreen2\n          }), _jsx(Stack.Screen, {\n            name: \"Bottom\",\n            component: BottomNav\n          }), _jsx(Stack.Screen, {\n            name: \"SimiliarProduct\",\n            component: SimiliarProductScreen\n          }), _jsx(Stack.Screen, {\n            name: \"UpdateProfile\",\n            component: UpdateProfileScreen\n          })]\n        }) : _jsxs(Stack.Navigator, {\n          initialRouteName: \"Login\",\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"Login\",\n            component: LoginScreen2\n          }), _jsx(Stack.Screen, {\n            name: \"Register\",\n            component: RegisterScreen2\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["NativeBaseProvider","StatusBar","View","NavigationContainer","createNativeStackNavigator","BottomNav","LoginScreen2","RegisterScreen2","SimiliarProductScreen","UpdateProfileScreen","useEffect","useState","Provider","useSelector","store","AsyncStorage","Stack","App","isLoading","setIsLoading","userID","setUserID","getData","jsonValue","getItem","userInfo","JSON","parse","e","console","log","setTimeout","headerShown"],"sources":["F:/DoAn/DACN1/ShopApp/App.js"],"sourcesContent":["import { NativeBaseProvider, StatusBar, View } from \"native-base\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport BottomNav from \"./src/Navigations/BottomNav\";\nimport LoginScreen2 from \"./src/Screens/LoginScreen2\";\nimport RegisterScreen2 from \"./src/Screens/RegisterScreen2\";\nimport SimiliarProductScreen from \"./src/Screens/SimiliarProductScreen\";\nimport UpdateProfileScreen from \"./src/Screens/UpdateProfileScreen\";\nimport { useEffect, useState } from \"react\";\nimport { ActivityIndicator } from \"react-native\";\nimport { Provider, useSelector } from \"react-redux\";\nimport store from \"./src/Redux/Store\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [userID, setUserID] = useState(null);\n\n  const getData = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem(\"userInfo\");\n      const userInfo = jsonValue != null ? JSON.parse(jsonValue) : null;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  if (isLoading) {\n    return (\n      <NativeBaseProvider>\n        <View flex={1} justifyContent=\"center\" alignItems=\"center\">\n          <ActivityIndicator size=\"large\" />\n        </View>\n      </NativeBaseProvider>\n    );\n  }\n  return (\n    <Provider store={store}>\n      <NativeBaseProvider>\n        <NavigationContainer>\n          <StatusBar hidden={true} />\n          {userID != null ? (\n            <Stack.Navigator\n              initialRouteName=\"Bottom\"\n              screenOptions={{\n                headerShown: false,\n              }}\n            >\n              <Stack.Screen name=\"Login\" component={LoginScreen2} />\n              <Stack.Screen name=\"Register\" component={RegisterScreen2} />\n              <Stack.Screen name=\"Bottom\" component={BottomNav} />\n              <Stack.Screen\n                name=\"SimiliarProduct\"\n                component={SimiliarProductScreen}\n              />\n              <Stack.Screen\n                name=\"UpdateProfile\"\n                component={UpdateProfileScreen}\n              />\n            </Stack.Navigator>\n          ) : (\n            <Stack.Navigator\n              initialRouteName=\"Login\"\n              screenOptions={{\n                headerShown: false,\n              }}\n            >\n              <Stack.Screen name=\"Login\" component={LoginScreen2} />\n              <Stack.Screen name=\"Register\" component={RegisterScreen2} />\n            </Stack.Navigator>\n          )}\n        </NavigationContainer>\n      </NativeBaseProvider>\n    </Provider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}