{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeBaseProvider, StatusBar, View } from \"native-base\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport BottomNav from \"./src/Navigations/BottomNav\";\nimport LoginScreen2 from \"./src/Screens/LoginScreen2\";\nimport RegisterScreen2 from \"./src/Screens/RegisterScreen2\";\nimport SimiliarProductScreen from \"./src/Screens/SimiliarProductScreen\";\nimport UpdateProfileScreen from \"./src/Screens/UpdateProfileScreen\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"./src/Components/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userToken = _useState4[0],\n    setUserToken = _useState4[1];\n  var authContext = useMemo(function () {\n    return {\n      logIn: function logIn() {\n        setUserToken(\"adwawdada\");\n        setIsLoading(false);\n      },\n      logOut: function logOut() {\n        setUserToken(null);\n        setIsLoading(false);\n      },\n      signUp: function signUp() {\n        setUserToken(\"adwawdada\");\n        setIsLoading(false);\n      }\n    };\n  });\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n  if (isLoading) {\n    return _jsx(NativeBaseProvider, {\n      children: _jsx(View, {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: _jsx(ActivityIndicator, {\n          size: \"large\"\n        })\n      })\n    });\n  }\n  return _jsx(AuthContext.Provider, {\n    value: authContext,\n    children: _jsx(NativeBaseProvider, {\n      children: _jsx(NavigationContainer, {})\n    })\n  });\n}","map":{"version":3,"names":["NativeBaseProvider","StatusBar","View","NavigationContainer","createNativeStackNavigator","BottomNav","LoginScreen2","RegisterScreen2","SimiliarProductScreen","UpdateProfileScreen","React","useEffect","useMemo","useState","AuthContext","Stack","App","isLoading","setIsLoading","userToken","setUserToken","authContext","logIn","logOut","signUp","setTimeout"],"sources":["F:/DoAn/DACN1/ShopApp/App.js"],"sourcesContent":["import { NativeBaseProvider, StatusBar, View } from \"native-base\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport BottomNav from \"./src/Navigations/BottomNav\";\nimport LoginScreen2 from \"./src/Screens/LoginScreen2\";\nimport RegisterScreen2 from \"./src/Screens/RegisterScreen2\";\nimport SimiliarProductScreen from \"./src/Screens/SimiliarProductScreen\";\nimport UpdateProfileScreen from \"./src/Screens/UpdateProfileScreen\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { ActivityIndicator } from \"react-native\";\nimport { AuthContext } from \"./src/Components/AuthContext\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [userToken, setUserToken] = useState(null);\n  const authContext = useMemo(() => ({\n    logIn: () => {\n      setUserToken(\"adwawdada\");\n      setIsLoading(false);\n    },\n    logOut: () => {\n      setUserToken(null);\n      setIsLoading(false);\n    },\n    signUp: () => {\n      setUserToken(\"adwawdada\");\n      setIsLoading(false);\n    },\n  }));\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  if (isLoading) {\n    return (\n      <NativeBaseProvider>\n        <View flex={1} justifyContent=\"center\" alignItems=\"center\">\n          <ActivityIndicator size=\"large\" />\n        </View>\n      </NativeBaseProvider>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NativeBaseProvider>\n        <NavigationContainer></NavigationContainer>\n      </NativeBaseProvider>\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";AAAA,SAASA,kBAAkB,EAAEC,SAAS,EAAEC,IAAI,QAAQ,aAAa;AACjE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,SAAS;AAChB,OAAOC,YAAY;AACnB,OAAOC,eAAe;AACtB,OAAOC,qBAAqB;AAC5B,OAAOC,mBAAmB;AAC1B,OAAOC,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5D,SAASC,WAAW;AAAuC;AAE3D,IAAMC,KAAK,GAAGX,0BAA0B,EAAE;AAE1C,eAAe,SAASY,GAAG,GAAG;EAC5B,gBAAkCH,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAzCI,SAAS;IAAEC,YAAY;EAC9B,iBAAkCL,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAzCM,SAAS;IAAEC,YAAY;EAC9B,IAAMC,WAAW,GAAGT,OAAO,CAAC;IAAA,OAAO;MACjCU,KAAK,EAAE,iBAAM;QACXF,YAAY,CAAC,WAAW,CAAC;QACzBF,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC;MACDK,MAAM,EAAE,kBAAM;QACZH,YAAY,CAAC,IAAI,CAAC;QAClBF,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC;MACDM,MAAM,EAAE,kBAAM;QACZJ,YAAY,CAAC,WAAW,CAAC;QACzBF,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;EAAA,CAAC,CAAC;EAEHP,SAAS,CAAC,YAAM;IACdc,UAAU,CAAC,YAAM;MACfP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,SAAS,EAAE;IACb,OACE,KAAC,kBAAkB;MAAA,UACjB,KAAC,IAAI;QAAC,IAAI,EAAE,CAAE;QAAC,cAAc,EAAC,QAAQ;QAAC,UAAU,EAAC,QAAQ;QAAA,UACxD,KAAC,iBAAiB;UAAC,IAAI,EAAC;QAAO;MAAG;IAC7B,EACY;EAEzB;EAEA,OACE,KAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEI,WAAY;IAAA,UACvC,KAAC,kBAAkB;MAAA,UACjB,KAAC,mBAAmB;IAAuB;EACxB,EACA;AAE3B"},"metadata":{},"sourceType":"module"}