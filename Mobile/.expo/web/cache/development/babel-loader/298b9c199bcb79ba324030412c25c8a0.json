{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"./../Constants/UserConstants\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var login = function login(email, password) {\n  return function () {\n    var _ref = _asyncToGenerator(function* (dispatch) {\n      var URL = \"http://localhost:5000\";\n      try {\n        dispatch({\n          type: USER_LOGIN_REQUEST\n        });\n        var config = {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        var _yield$axios$post = yield axios.post(URL + \"/api/users/login\", {\n            email: email,\n            password: password\n          }, config),\n          data = _yield$axios$post.data;\n        dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: data\n        });\n        yield AsyncStorage.setItem(\"userInfo\", JSON.stringify(data));\n      } catch (error) {\n        dispatch({\n          type: USER_LOGIN_FAIL,\n          payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        });\n      }\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport var logout = function logout() {\n  return function () {\n    var _ref2 = _asyncToGenerator(function* (dispatch) {\n      localStorage.removeItem(\"userInfo\");\n      dispatch({\n        type: USER_LOGOUT\n      });\n      dispatch({\n        type: USER_DETAILS_RESET\n      });\n      document.location.href = \"/login\";\n    });\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\nexport var register = function register(name, email, password) {\n  return function () {\n    var _ref3 = _asyncToGenerator(function* (dispatch) {\n      try {\n        dispatch({\n          type: USER_REGISTER_REQUEST\n        });\n        var config = {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        var _yield$axios$post2 = yield axios.post(\"http://localhost:5000/api/users\", {\n            name: name,\n            email: email,\n            password: password\n          }, config),\n          data = _yield$axios$post2.data;\n        dispatch({\n          type: USER_REGISTER_SUCCESS,\n          payload: data\n        });\n        dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: data\n        });\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      } catch (error) {\n        dispatch({\n          type: USER_REGISTER_FAIL,\n          payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        });\n      }\n    });\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n\nexport var getUserDetails = function getUserDetails(id) {\n  return function () {\n    var _ref4 = _asyncToGenerator(function* (dispatch, getState) {\n      try {\n        dispatch({\n          type: USER_DETAILS_REQUEST\n        });\n        var _getState = getState(),\n          userInfo = _getState.userLogin.userInfo;\n        var config = {\n          headers: {\n            Authorization: \"Bearer \" + userInfo.token\n          }\n        };\n        var _yield$axios$get = yield axios.get(\"http://localhost:5000/api/users/\" + id, config),\n          data = _yield$axios$get.data;\n        dispatch({\n          type: USER_DETAILS_SUCCESS,\n          payload: data\n        });\n      } catch (error) {\n        var message = error.response && error.response.data.message ? error.response.data.message : error.message;\n        if (message === \"Not authorized, token failed\") {\n          dispatch(logout());\n        }\n        dispatch({\n          type: USER_DETAILS_FAIL,\n          payload: message\n        });\n      }\n    });\n    return function (_x4, _x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\n\nexport var updateProfile = function updateProfile(user) {\n  return function () {\n    var _ref5 = _asyncToGenerator(function* (dispatch, getState) {\n      try {\n        dispatch({\n          type: USER_UPDATE_PROFILE_REQUEST\n        });\n        var _getState2 = getState(),\n          userInfo = _getState2.userLogin.userInfo;\n        var config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + userInfo.token\n          }\n        };\n        var _yield$axios$put = yield axios.put(\"http://localhost:5000/api/users/profile\", user, config),\n          data = _yield$axios$put.data;\n        dispatch({\n          type: USER_UPDATE_PROFILE_SUCCESS,\n          payload: data\n        });\n        dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: data\n        });\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      } catch (error) {\n        var message = error.response && error.response.data.message ? error.response.data.message : error.message;\n        if (message === \"Not authorized, token failed\") {\n          dispatch(logout());\n        }\n        dispatch({\n          type: USER_UPDATE_PROFILE_FAIL,\n          payload: message\n        });\n      }\n    });\n    return function (_x6, _x7) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","AsyncStorage","login","email","password","dispatch","URL","type","config","headers","post","data","payload","setItem","JSON","stringify","error","response","message","logout","localStorage","removeItem","document","location","href","register","name","getUserDetails","id","getState","userInfo","userLogin","Authorization","token","get","updateProfile","user","put"],"sources":["F:/DoAn/DACN1/ShopApp/src/Redux/Actions/UserActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"./../Constants/UserConstants\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n//login\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const URL = `http://localhost:5000`;\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `${URL}/api/users/login`,\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    await AsyncStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//logout\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n\r\n  document.location.href = \"/login\";\r\n};\r\n\r\n//register\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `http://localhost:5000/api/users`,\r\n      {\r\n        name,\r\n        email,\r\n        password,\r\n      },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// use details\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `http://localhost:5000/api/users/${id}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n//upadte profile\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `http://localhost:5000/api/users/profile`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}