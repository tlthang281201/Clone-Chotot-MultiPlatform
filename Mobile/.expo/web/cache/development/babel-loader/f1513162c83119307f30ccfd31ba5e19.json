{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Image, View, ScrollView, Text } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar imageSlide = [\"../../assets/slide1.png\", \"../../assets/slide2.png\", \"../../assets/slide3.png\", \"../../assets/slide4.png\"];\nfunction SlideScreen() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    imgActive = _useState2[0],\n    setImageActive = _useState2[1];\n  var onchange = function onchange(nativeEvent) {\n    if (nativeEvent) {\n      var slide = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\n      if (slide != imgActive) {\n        setImageActive(slide);\n      }\n    }\n  };\n  return _jsxs(View, {\n    mt: 2,\n    bg: \"white\",\n    children: [_jsx(ScrollView, {\n      showsHorizontalScrollIndicator: false,\n      horizontal: true,\n      pagingEnabled: true,\n      onScroll: function onScroll(_ref) {\n        var nativeEvent = _ref.nativeEvent;\n        return onchange(nativeEvent);\n      },\n      children: imageSlide.map(function (e, index) {\n        return _jsx(Image, {\n          resizeMode: \"stretch\",\n          alt: \"slide\",\n          source: {\n            uri: e\n          },\n          w: 400,\n          h: 150\n        }, index);\n      })\n    }), _jsx(View, {\n      position: \"absolute\",\n      flexDirection: \"row\",\n      alignSelf: \"center\",\n      bottom: 0,\n      children: imageSlide.map(function (e, index) {\n        return _jsx(Text, {\n          fontSize: 30,\n          style: imgActive == index ? {\n            color: \"black\",\n            margin: 3\n          } : {\n            color: \"white\",\n            margin: 3\n          },\n          children: \"\\u2022\"\n        }, e);\n      })\n    })]\n  });\n}\nexport default SlideScreen;","map":{"version":3,"names":["React","useState","Image","View","ScrollView","Text","imageSlide","SlideScreen","imgActive","setImageActive","onchange","nativeEvent","slide","Math","ceil","contentOffset","x","layoutMeasurement","width","map","e","index","uri","color","margin"],"sources":["F:/DoAn/DACN1/ShopApp/src/Components/SlideScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, View, ScrollView, Text } from \"native-base\";\r\nconst imageSlide = [\r\n  \"../../assets/slide1.png\",\r\n  \"../../assets/slide2.png\",\r\n  \"../../assets/slide3.png\",\r\n  \"../../assets/slide4.png\",\r\n];\r\n\r\nfunction SlideScreen() {\r\n  const [imgActive, setImageActive] = useState(0);\r\n\r\n  const onchange = (nativeEvent) => {\r\n    if (nativeEvent) {\r\n      const slide = Math.ceil(\r\n        nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width\r\n      );\r\n      if (slide != imgActive) {\r\n        setImageActive(slide);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <View mt={2} bg=\"white\">\r\n      <ScrollView\r\n        showsHorizontalScrollIndicator={false}\r\n        horizontal\r\n        pagingEnabled\r\n        onScroll={({ nativeEvent }) => onchange(nativeEvent)}\r\n      >\r\n        {imageSlide.map((e, index) => (\r\n          <Image\r\n            key={index}\r\n            resizeMode=\"stretch\"\r\n            alt=\"slide\"\r\n            source={{ uri: e }}\r\n            w={400}\r\n            h={150}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n      <View\r\n        position=\"absolute\"\r\n        flexDirection=\"row\"\r\n        alignSelf=\"center\"\r\n        bottom={0}\r\n      >\r\n        {imageSlide.map((e, index) => (\r\n          <Text\r\n            key={e}\r\n            fontSize={30}\r\n            style={\r\n              imgActive == index\r\n                ? { color: \"black\", margin: 3 }\r\n                : { color: \"white\", margin: 3 }\r\n            }\r\n          >\r\n            â€¢\r\n          </Text>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default SlideScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,QAAQ,aAAa;AAAC;AAAA;AAC5D,IAAMC,UAAU,GAAG,CACjB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,CAC1B;AAED,SAASC,WAAW,GAAG;EACrB,gBAAoCN,QAAQ,CAAC,CAAC,CAAC;IAAA;IAAxCO,SAAS;IAAEC,cAAc;EAEhC,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,WAAW,EAAK;IAChC,IAAIA,WAAW,EAAE;MACf,IAAMC,KAAK,GAAGC,IAAI,CAACC,IAAI,CACrBH,WAAW,CAACI,aAAa,CAACC,CAAC,GAAGL,WAAW,CAACM,iBAAiB,CAACC,KAAK,CAClE;MACD,IAAIN,KAAK,IAAIJ,SAAS,EAAE;QACtBC,cAAc,CAACG,KAAK,CAAC;MACvB;IACF;EACF,CAAC;EACD,OACE,MAAC,IAAI;IAAC,EAAE,EAAE,CAAE;IAAC,EAAE,EAAC,OAAO;IAAA,WACrB,KAAC,UAAU;MACT,8BAA8B,EAAE,KAAM;MACtC,UAAU;MACV,aAAa;MACb,QAAQ,EAAE;QAAA,IAAGD,WAAW,QAAXA,WAAW;QAAA,OAAOD,QAAQ,CAACC,WAAW,CAAC;MAAA,CAAC;MAAA,UAEpDL,UAAU,CAACa,GAAG,CAAC,UAACC,CAAC,EAAEC,KAAK;QAAA,OACvB,KAAC,KAAK;UAEJ,UAAU,EAAC,SAAS;UACpB,GAAG,EAAC,OAAO;UACX,MAAM,EAAE;YAAEC,GAAG,EAAEF;UAAE,CAAE;UACnB,CAAC,EAAE,GAAI;UACP,CAAC,EAAE;QAAI,GALFC,KAAK,CAMV;MAAA,CACH;IAAC,EACS,EACb,KAAC,IAAI;MACH,QAAQ,EAAC,UAAU;MACnB,aAAa,EAAC,KAAK;MACnB,SAAS,EAAC,QAAQ;MAClB,MAAM,EAAE,CAAE;MAAA,UAETf,UAAU,CAACa,GAAG,CAAC,UAACC,CAAC,EAAEC,KAAK;QAAA,OACvB,KAAC,IAAI;UAEH,QAAQ,EAAE,EAAG;UACb,KAAK,EACHb,SAAS,IAAIa,KAAK,GACd;YAAEE,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAE,CAAC,GAC7B;YAAED,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAE,CACjC;UAAA;QAAA,GANIJ,CAAC,CASD;MAAA,CACR;IAAC,EACG;EAAA,EACF;AAEX;AAEA,eAAeb,WAAW"},"metadata":{},"sourceType":"module"}