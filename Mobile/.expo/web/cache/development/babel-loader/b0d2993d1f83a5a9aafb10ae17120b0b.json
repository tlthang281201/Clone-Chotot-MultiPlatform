{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Button, Image, Text, View } from \"native-base\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction TestScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    uploading = _useState2[0],\n    setUploading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    avatarUrl = _useState4[0],\n    setAvatarUrl = _useState4[1];\n  return _jsxs(View, {\n    children: [avatarUrl ? _jsx(Image, {\n      source: {\n        uri: avatarUrl\n      },\n      accessibilityLabel: \"Avatar\",\n      style: [avatarSize, styles.avatar, styles.image]\n    }) : _jsx(View, {\n      style: [avatarSize, styles.avatar, styles.noImage]\n    }), _jsx(View, {\n      children: _jsx(Button, {\n        title: uploading ? \"Uploading ...\" : \"Upload\",\n        onPress: uploadAvatar,\n        disabled: uploading\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  avatar: {\n    borderRadius: 5,\n    overflow: \"hidden\",\n    maxWidth: \"100%\"\n  },\n  image: {\n    objectFit: \"cover\",\n    paddingTop: 0\n  },\n  noImage: {\n    backgroundColor: \"#333\",\n    border: \"1px solid rgb(200, 200, 200)\",\n    borderRadius: 5\n  }\n});\nexport default TestScreen;","map":{"version":3,"names":["Button","Image","Text","View","useState","TestScreen","uploading","setUploading","avatarUrl","setAvatarUrl","uri","avatarSize","styles","avatar","image","noImage","uploadAvatar","StyleSheet","create","borderRadius","overflow","maxWidth","objectFit","paddingTop","backgroundColor","border"],"sources":["F:/DoAn/DACN1/ShopApp/src/Screens/TestScreen.js"],"sourcesContent":["import { Button, Image, Text, View } from \"native-base\";\r\nimport { useState } from \"react\";\r\n\r\nfunction TestScreen() {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [avatarUrl, setAvatarUrl] = useState(null);\r\n  return (\r\n    <View>\r\n      {avatarUrl ? (\r\n        <Image\r\n          source={{ uri: avatarUrl }}\r\n          accessibilityLabel=\"Avatar\"\r\n          style={[avatarSize, styles.avatar, styles.image]}\r\n        />\r\n      ) : (\r\n        <View style={[avatarSize, styles.avatar, styles.noImage]} />\r\n      )}\r\n      <View>\r\n        <Button\r\n          title={uploading ? \"Uploading ...\" : \"Upload\"}\r\n          onPress={uploadAvatar}\r\n          disabled={uploading}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  avatar: {\r\n    borderRadius: 5,\r\n    overflow: \"hidden\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  image: {\r\n    objectFit: \"cover\",\r\n    paddingTop: 0,\r\n  },\r\n  noImage: {\r\n    backgroundColor: \"#333\",\r\n    border: \"1px solid rgb(200, 200, 200)\",\r\n    borderRadius: 5,\r\n  },\r\n});\r\nexport default TestScreen;\r\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,QAAQ,aAAa;AACvD,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,SAASC,UAAU,GAAG;EACpB,gBAAkCD,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA1CE,SAAS;IAAEC,YAAY;EAC9B,iBAAkCH,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAzCI,SAAS;IAAEC,YAAY;EAC9B,OACE,MAAC,IAAI;IAAA,WACFD,SAAS,GACR,KAAC,KAAK;MACJ,MAAM,EAAE;QAAEE,GAAG,EAAEF;MAAU,CAAE;MAC3B,kBAAkB,EAAC,QAAQ;MAC3B,KAAK,EAAE,CAACG,UAAU,EAAEC,MAAM,CAACC,MAAM,EAAED,MAAM,CAACE,KAAK;IAAE,EACjD,GAEF,KAAC,IAAI;MAAC,KAAK,EAAE,CAACH,UAAU,EAAEC,MAAM,CAACC,MAAM,EAAED,MAAM,CAACG,OAAO;IAAE,EAC1D,EACD,KAAC,IAAI;MAAA,UACH,KAAC,MAAM;QACL,KAAK,EAAET,SAAS,GAAG,eAAe,GAAG,QAAS;QAC9C,OAAO,EAAEU,YAAa;QACtB,QAAQ,EAAEV;MAAU;IACpB,EACG;EAAA,EACF;AAEX;AAEA,IAAMM,MAAM,GAAGK,UAAU,CAACC,MAAM,CAAC;EAC/BL,MAAM,EAAE;IACNM,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE;EACZ,CAAC;EACDP,KAAK,EAAE;IACLQ,SAAS,EAAE,OAAO;IAClBC,UAAU,EAAE;EACd,CAAC;EACDR,OAAO,EAAE;IACPS,eAAe,EAAE,MAAM;IACvBC,MAAM,EAAE,8BAA8B;IACtCN,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AACF,eAAed,UAAU"},"metadata":{},"sourceType":"module"}