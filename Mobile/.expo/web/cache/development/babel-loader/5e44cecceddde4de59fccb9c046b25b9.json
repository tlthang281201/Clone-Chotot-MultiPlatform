{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"children\", \"isHovered\", \"isPressed\", \"isFocused\", \"isFocusVisible\", \"isDisabled\"],\n  _excluded2 = [\"_icon\", \"onPressIn\", \"onPressOut\", \"onHoverIn\", \"onHoverOut\", \"onFocus\", \"onBlur\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport { Pressable } from \"../../primitives/Pressable\";\nimport { Icon } from \"../../primitives/Icon\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { composeEventHandlers } from \"../../../utils\";\nimport { useHover, useFocus, useIsPressed } from \"../../primitives/Pressable/Pressable\";\nimport { useFocusRing } from '@react-native-aria/focus';\nvar IconButton = function IconButton(_ref, ref) {\n  var icon = _ref.icon,\n    children = _ref.children,\n    isHoveredProp = _ref.isHovered,\n    isPressedProp = _ref.isPressed,\n    isFocusedProp = _ref.isFocused,\n    isFocusVisibleProp = _ref.isFocusVisible,\n    isDisabled = _ref.isDisabled,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useHover = useHover(),\n    hoverProps = _useHover.hoverProps,\n    isHovered = _useHover.isHovered;\n  var _useIsPressed = useIsPressed(),\n    pressableProps = _useIsPressed.pressableProps,\n    isPressed = _useIsPressed.isPressed;\n  var _useFocus = useFocus(),\n    focusProps = _useFocus.focusProps,\n    isFocused = _useFocus.isFocused;\n  var _useFocusRing = useFocusRing(),\n    isFocusVisible = _useFocusRing.isFocusVisible,\n    focusRingProps = _useFocusRing.focusProps;\n  var _usePropsResolution = usePropsResolution('IconButton', props, {\n      isHovered: isHoveredProp || isHovered,\n      isPressed: isPressedProp || isPressed,\n      isFocused: isFocusedProp || isFocused,\n      isFocusVisible: isFocusVisibleProp || isFocusVisible,\n      isDisabled: isDisabled\n    }),\n    _icon = _usePropsResolution._icon,\n    onPressIn = _usePropsResolution.onPressIn,\n    onPressOut = _usePropsResolution.onPressOut,\n    onHoverIn = _usePropsResolution.onHoverIn,\n    onHoverOut = _usePropsResolution.onHoverOut,\n    onFocus = _usePropsResolution.onFocus,\n    onBlur = _usePropsResolution.onBlur,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n  var clonedIcon;\n  if (icon) {\n    clonedIcon = React.cloneElement(icon, _objectSpread(_objectSpread({}, _icon), icon === null || icon === void 0 ? void 0 : icon.props));\n  }\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Pressable, _extends({\n    accessibilityRole: \"button\",\n    ref: ref,\n    onPressIn: composeEventHandlers(onPressIn, pressableProps.onPressIn),\n    onPressOut: composeEventHandlers(onPressOut, pressableProps.onPressOut),\n\n    onHoverIn: composeEventHandlers(onHoverIn, hoverProps.onHoverIn),\n\n    onHoverOut: composeEventHandlers(onHoverOut, hoverProps.onHoverOut),\n\n    onFocus: composeEventHandlers(composeEventHandlers(onFocus, focusProps.onFocus), focusRingProps.onFocus),\n\n    onBlur: composeEventHandlers(composeEventHandlers(onBlur, focusProps.onBlur), focusRingProps.onBlur)\n  }, resolvedProps), clonedIcon || React.createElement(Icon, _icon, children));\n};\nexport default memo(forwardRef(IconButton));","map":{"version":3,"sources":["index.tsx"],"names":["React","memo","forwardRef","Pressable","Icon","usePropsResolution","useHasResponsiveProps","composeEventHandlers","useHover","useFocus","useIsPressed","useFocusRing","IconButton","icon","children","isHovered","isHoveredProp","isPressed","isPressedProp","isFocused","isFocusedProp","isFocusVisible","isFocusVisibleProp","isDisabled","props","ref","hoverProps","pressableProps","focusProps","focusRingProps","_icon","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","resolvedProps","clonedIcon","cloneElement"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Pressable } from '../../primitives/Pressable';\nimport { Icon } from '../../primitives/Icon';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { composeEventHandlers } from '../../../utils';\nimport type { IIconButtonProps } from './types';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nconst IconButton = (\n  {\n    icon,\n    children,\n    isHovered: isHoveredProp,\n    isPressed: isPressedProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    isDisabled,\n    ...props\n  }: IIconButtonProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    _icon,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('IconButton', props, {\n    isHovered: isHoveredProp || isHovered,\n    isPressed: isPressedProp || isPressed,\n    isFocused: isFocusedProp || isFocused,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    isDisabled,\n  });\n\n  let clonedIcon;\n  if (icon) {\n    clonedIcon = React.cloneElement(icon, {\n      ..._icon,\n      ...icon?.props,\n    });\n  }\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      accessibilityRole=\"button\"\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n    >\n      {clonedIcon || <Icon {..._icon}>{children}</Icon>}\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(IconButton));\nexport type { IIconButtonProps };\n"]},"metadata":{},"sourceType":"module"}