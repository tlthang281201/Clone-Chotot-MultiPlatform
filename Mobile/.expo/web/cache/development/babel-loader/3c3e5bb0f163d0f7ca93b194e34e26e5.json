{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useSliderThumb } from '@react-native-aria/slider';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { useToken } from \"../../../hooks\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport Box from \"../Box\";\nimport { SliderContext } from \"./Context\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nfunction SliderThumb(props, ref) {\n  var _React$useContext = React.useContext(SliderContext),\n    state = _React$useContext.state,\n    trackLayout = _React$useContext.trackLayout,\n    orientation = _React$useContext.orientation,\n    colorScheme = _React$useContext.colorScheme,\n    thumbSize = _React$useContext.thumbSize,\n    isReadOnly = _React$useContext.isReadOnly,\n    isDisabled = _React$useContext.isDisabled;\n  var resolvedProps = usePropsResolution('SliderThumb', _objectSpread({\n    size: thumbSize,\n    colorScheme: colorScheme\n  }, props), {\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  });\n  var inputRef = React.useRef(null);\n  var _useSliderThumb = useSliderThumb({\n      index: 0,\n      trackLayout: trackLayout,\n      inputRef: inputRef,\n      orientation: orientation\n    }, state),\n    thumbProps = _useSliderThumb.thumbProps,\n    inputProps = _useSliderThumb.inputProps;\n  var thumbAbsoluteSize = useToken('sizes', resolvedProps.size);\n  var thumbStyles = {\n    bottom: orientation === 'vertical' ? \"\".concat(state.getThumbPercent(0) * 100, \"%\") : undefined,\n    left: orientation !== 'vertical' ? \"\".concat(state.getThumbPercent(0) * 100, \"%\") : undefined,\n    transform: orientation === 'vertical' ? [{\n      translateY: parseInt(thumbAbsoluteSize) / 2\n    }] : [{\n      translateX: -parseInt(thumbAbsoluteSize) / 2\n    }]\n  };\n  thumbStyles.transform.push({\n    scale: state.isThumbDragging(0) ? resolvedProps.scaleOnPressed : 1\n  });\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({\n    position: \"absolute\"\n  }, thumbProps, resolvedProps, {\n    ref: ref,\n    style: [thumbStyles, props.style]\n  }), props.children, Platform.OS === 'web' && React.createElement(VisuallyHidden, null, React.createElement(\"input\", _extends({\n    ref: inputRef\n  }, inputProps))));\n}\nSliderThumb.displayName = 'SliderThumb';\nexport default forwardRef(SliderThumb);","map":{"version":3,"sources":["SliderThumb.tsx"],"names":["React","forwardRef","useSliderThumb","VisuallyHidden","useToken","usePropsResolution","Box","SliderContext","useHasResponsiveProps","SliderThumb","props","ref","state","trackLayout","orientation","colorScheme","thumbSize","isReadOnly","isDisabled","useContext","resolvedProps","size","inputRef","useRef","thumbProps","inputProps","index","thumbAbsoluteSize","thumbStyles","bottom","getThumbPercent","undefined","left","transform","translateY","parseInt","translateX","push","scale","isThumbDragging","scaleOnPressed","style","children","Platform","OS","displayName"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { useSliderThumb } from '@react-native-aria/slider';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { useToken } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ISliderThumbProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction SliderThumb(props: ISliderThumbProps, ref: any) {\n  const {\n    state,\n    trackLayout,\n    orientation,\n    colorScheme,\n    thumbSize,\n    isReadOnly,\n    isDisabled,\n  } = React.useContext(SliderContext);\n  const resolvedProps = usePropsResolution(\n    'SliderThumb',\n    {\n      size: thumbSize,\n      colorScheme,\n      ...props,\n    },\n    { isDisabled, isReadOnly }\n  );\n  const inputRef = React.useRef(null);\n  const { thumbProps, inputProps } = useSliderThumb(\n    {\n      index: 0,\n      trackLayout,\n      inputRef,\n      orientation,\n    },\n    state\n  );\n\n  const thumbAbsoluteSize = useToken('sizes', resolvedProps.size);\n\n  const thumbStyles: any = {\n    bottom:\n      orientation === 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    left:\n      orientation !== 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    transform:\n      orientation === 'vertical'\n        ? [{ translateY: parseInt(thumbAbsoluteSize) / 2 }]\n        : [{ translateX: -parseInt(thumbAbsoluteSize) / 2 }],\n  };\n\n  thumbStyles.transform.push({\n    scale: state.isThumbDragging(0) ? resolvedProps.scaleOnPressed : 1,\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box\n      position=\"absolute\"\n      {...thumbProps}\n      {...resolvedProps}\n      ref={ref}\n      style={[thumbStyles, props.style]}\n      // {...(isReadOnly && _readOnly)}\n      // {...(isDisabled && _disabled)}\n    >\n      {props.children}\n      {Platform.OS === 'web' && (\n        <VisuallyHidden>\n          <input ref={inputRef} {...inputProps} />\n        </VisuallyHidden>\n      )}\n    </Box>\n  );\n}\n\nSliderThumb.displayName = 'SliderThumb';\n\nexport default forwardRef(SliderThumb);\n"]},"metadata":{},"sourceType":"module"}