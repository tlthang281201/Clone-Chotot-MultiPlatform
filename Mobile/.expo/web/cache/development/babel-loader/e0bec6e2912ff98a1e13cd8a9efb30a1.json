{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"in\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport PresenceTransition from \"./PresenceTransition\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { usePropsResolution } from \"../../../hooks/\";\nvar ScaleFade = function ScaleFade(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _usePropsResolution = usePropsResolution('ScaleFade', props),\n    animationState = _usePropsResolution.in,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(PresenceTransition, _extends({\n    visible: animationState\n  }, resolvedProps, {\n    ref: ref\n  }), children);\n};\nexport default React.memo(React.forwardRef(ScaleFade));","map":{"version":3,"sources":["ScaleFade.tsx"],"names":["React","PresenceTransition","useHasResponsiveProps","usePropsResolution","ScaleFade","children","props","ref","in","animationState","resolvedProps","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,kBAAP;AACA,SAASC,qBAAT;AACA,SAASC,kBAAT;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAS,OAA6CG,GAA1C,EAAwD;EAAA,IAArDF,QAAF,QAAEA,QAAF;IAAeC,KAAAA;EAChC,0BAAiDH,kBAAkB,CACjE,WADiE,EAEjEG,KAFiE,CADK;IAC5DG,cAAN,uBAAED,EAAE;IAAqBE,aAAAA;;EAK/B,IAAIR,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EAED,OACE,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAA,QAAA,CAAA;IAAoB,OAAO,EAAEG;EAA7B,CAAA,EAAiDC,aAAjD,EAAA;IAAgE,GAAG,EAAEH;EAArE,CAAA,CAAA,EACGF,QADH,CADF;AAKD,CAfD;AAiBA,eAAeL,KAAK,CAACW,IAANX,CAAWA,KAAK,CAACY,UAANZ,CAAiBI,SAAjBJ,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport type { IScaleFadeProps } from './types';\nimport PresenceTransition from './PresenceTransition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst ScaleFade = ({ children, ...props }: IScaleFadeProps, ref?: any) => {\n  const { in: animationState, ...resolvedProps } = usePropsResolution(\n    'ScaleFade',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <PresenceTransition visible={animationState} {...resolvedProps} ref={ref}>\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(ScaleFade));\n"]},"metadata":{},"sourceType":"module"}