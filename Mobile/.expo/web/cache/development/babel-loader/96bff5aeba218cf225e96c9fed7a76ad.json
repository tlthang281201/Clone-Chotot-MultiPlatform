{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { Center, Pressable, Text } from \"native-base\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport HomeScreen from \"../Screens/HomeScreen\";\nimport Colors from \"../color\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Entypo, AntDesign, FontAwesome, FontAwesome5, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport CartScreen from \"../Screens/CartScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar CustomTab = function CustomTab(_ref) {\n  var children = _ref.children,\n    onPress = _ref.onPress;\n  return _jsx(Pressable, {\n    onPress: onPress,\n    h: 60,\n    w: 60,\n    rounded: \"full\",\n    bg: Colors.main,\n    top: -30,\n    shadow: 2,\n    children: children\n  });\n};\nfunction BottomNav() {\n  return _jsxs(Tab.Navigator, {\n    backBehavior: \"main\",\n    initialRouteName: \"Main\",\n    screenOptions: {\n      tabBarShowLabel: false,\n      tabBarStyle: _objectSpread({}, styles.tab),\n      headerShown: false,\n      tabBarHideOnKeyboard: true\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Main\",\n      component: HomeScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsx(Center, {\n            children: focused ? _jsx(Entypo, {\n              name: \"home\",\n              size: 24,\n              color: Colors.main\n            }) : _jsx(AntDesign, {\n              name: \"home\",\n              size: 24,\n              color: Colors.black\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Cart\",\n      component: CartScreen,\n      options: {\n        tabBarButton: function tabBarButton(props) {\n          return _jsx(CustomTab, _objectSpread({}, props));\n        },\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(Center, {\n            children: focused ? _jsx(FontAwesome5, {\n              name: \"shopping-basket\",\n              size: 24,\n              color: Colors.main\n            }) : _jsx(MaterialCommunityIcons, {\n              name: \"shopping-outline\",\n              size: 24,\n              color: Colors.black\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsx(Center, {\n            children: focused ? _jsx(FontAwesome, {\n              name: \"user\",\n              size: 24,\n              color: Colors.main\n            }) : _jsx(AntDesign, {\n              name: \"user\",\n              size: 24,\n              color: Colors.black\n            })\n          });\n        }\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  tab: {\n    elevation: 0,\n    backgroundColor: Colors.white,\n    height: 40\n  }\n});\nexport default BottomNav;","map":{"version":3,"names":["React","Center","Pressable","Text","createBottomTabNavigator","HomeScreen","Colors","Entypo","AntDesign","FontAwesome","FontAwesome5","MaterialCommunityIcons","ProfileScreen","CartScreen","Tab","CustomTab","children","onPress","main","BottomNav","tabBarShowLabel","tabBarStyle","styles","tab","headerShown","tabBarHideOnKeyboard","tabBarIcon","focused","black","tabBarButton","props","StyleSheet","create","elevation","backgroundColor","white","height"],"sources":["F:/DoAn/DACN1/ShopApp/src/Navigations/BottomNav.js"],"sourcesContent":["import React from \"react\";\r\nimport { Center, Pressable, Text } from \"native-base\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport HomeScreen from \"../Screens/HomeScreen\";\r\nimport Colors from \"../color\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport {\r\n  Entypo,\r\n  AntDesign,\r\n  FontAwesome,\r\n  FontAwesome5,\r\n  MaterialCommunityIcons,\r\n} from \"@expo/vector-icons\";\r\nimport ProfileScreen from \"../Screens/ProfileScreen\";\r\nimport CartScreen from \"../Screens/CartScreen\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst CustomTab = ({ children, onPress }) => (\r\n  <Pressable\r\n    onPress={onPress}\r\n    h={60}\r\n    w={60}\r\n    rounded=\"full\"\r\n    bg={Colors.main}\r\n    top={-30}\r\n    shadow={2}\r\n  >\r\n    {children}\r\n  </Pressable>\r\n);\r\n\r\nfunction BottomNav() {\r\n  return (\r\n    <Tab.Navigator\r\n      backBehavior=\"main\"\r\n      initialRouteName=\"Main\"\r\n      screenOptions={{\r\n        tabBarShowLabel: false,\r\n        tabBarStyle: { ...styles.tab },\r\n        headerShown: false,\r\n        tabBarHideOnKeyboard: true,\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Main\"\r\n        component={HomeScreen}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <Center>\r\n              {focused ? (\r\n                <Entypo name=\"home\" size={24} color={Colors.main} />\r\n              ) : (\r\n                <AntDesign name=\"home\" size={24} color={Colors.black} />\r\n              )}\r\n            </Center>\r\n          ),\r\n        }}\r\n      />\r\n      {/* CART */}\r\n      <Tab.Screen\r\n        name=\"Cart\"\r\n        component={CartScreen}\r\n        options={{\r\n          tabBarButton: (props) => <CustomTab {...props} />,\r\n          tabBarIcon: ({ focused }) => (\r\n            <Center>\r\n              {focused ? (\r\n                <FontAwesome5\r\n                  name=\"shopping-basket\"\r\n                  size={24}\r\n                  color={Colors.main}\r\n                />\r\n              ) : (\r\n                <MaterialCommunityIcons\r\n                  name=\"shopping-outline\"\r\n                  size={24}\r\n                  color={Colors.black}\r\n                />\r\n              )}\r\n            </Center>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {/* PROFILE */}\r\n\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileScreen}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <Center>\r\n              {focused ? (\r\n                <FontAwesome name=\"user\" size={24} color={Colors.main} />\r\n              ) : (\r\n                <AntDesign name=\"user\" size={24} color={Colors.black} />\r\n              )}\r\n            </Center>\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tab: {\r\n    elevation: 0,\r\n    backgroundColor: Colors.white,\r\n    height: 40,\r\n  },\r\n});\r\n\r\nexport default BottomNav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}