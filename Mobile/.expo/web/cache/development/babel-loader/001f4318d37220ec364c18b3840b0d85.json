{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useState } from \"react\";\nimport { Center } from \"native-base\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Colors from \"../color\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FontAwesome, Ionicons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport StackNav from \"./StackNav\";\nimport ProfileScreen2 from \"../Screens/ProfileScreen2\";\nimport ManageProductScreen from \"../Screens/ManageProductScreen\";\nimport { useSelector } from \"react-redux\";\nimport LoginScreen2 from \"../Screens/LoginScreen2\";\nimport CategoriesBlogScreen from \"../Screens/CategoriesBlogScreen\";\nimport { Storage } from \"expo-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction BottomNav() {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    userInfo = _useState2[0],\n    setUserInfo = _useState2[1];\n  var fetchProfile = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var info = yield Storage.getItem({\n          key: \"userInfo\"\n        });\n        if (info != null) {\n          setUserInfo(JSON.parse(info));\n        } else {\n          setUserInfo(null);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function fetchProfile() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchProfile();\n  }, []);\n  return _jsxs(Tab.Navigator, {\n    backBehavior: \"Trang ch\\u1EE7\",\n    initialRouteName: \"Trang ch\\u1EE7\",\n    screenOptions: {\n      tabBarStyle: _objectSpread({}, styles.tab),\n      headerShown: false,\n      tabBarHideOnKeyboard: true\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Trang ch\\u1EE7\",\n      component: StackNav,\n      options: {\n        tabBarActiveTintColor: \"#FFA500\",\n        tabBarInactiveTintColor: \"gray\",\n        tabBarStyle: {\n          paddingBottom: 5\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsx(Center, {\n            children: focused ? _jsx(Ionicons, {\n              name: \"home-sharp\",\n              size: 24,\n              color: \"#FFA500\"\n            }) : _jsx(Ionicons, {\n              name: \"home-outline\",\n              size: 24,\n              color: \"gray\"\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Qu\\u1EA3n l\\xFD tin\",\n      component: ManageProductScreen,\n      options: {\n        tabBarActiveTintColor: \"#FFA500\",\n        tabBarInactiveTintColor: \"gray\",\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(Center, {\n            children: focused ? _jsx(Ionicons, {\n              name: \"newspaper\",\n              size: 24,\n              color: \"#FFA500\"\n            }) : _jsx(Ionicons, {\n              name: \"newspaper-outline\",\n              size: 24,\n              color: \"gray\"\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"\\u0110\\u0103ng tin\",\n      component: CategoriesBlogScreen,\n      options: {\n        tabBarActiveTintColor: \"#FFA500\",\n        tabBarInactiveTintColor: \"gray\",\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsx(Center, {\n            children: focused ? _jsx(SimpleLineIcons, {\n              name: \"note\",\n              size: 24,\n              color: \"#FFA500\"\n            }) : _jsx(SimpleLineIcons, {\n              name: \"note\",\n              size: 24,\n              color: \"gray\"\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"C\\xE1 nh\\xE2n\",\n      component: ProfileScreen2,\n      options: {\n        tabBarActiveTintColor: \"#FFA500\",\n        tabBarInactiveTintColor: \"gray\",\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var focused = _ref5.focused;\n          return _jsx(Center, {\n            children: focused ? _jsx(FontAwesome, {\n              name: \"user\",\n              size: 24,\n              color: \"#FFA500\"\n            }) : _jsx(FontAwesome, {\n              name: \"user-o\",\n              size: 24,\n              color: \"gray\"\n            })\n          });\n        }\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  tab: {\n    elevation: 0,\n    backgroundColor: Colors.white,\n    height: 50\n  }\n});\nexport default BottomNav;","map":{"version":3,"names":["React","useEffect","useState","Center","createBottomTabNavigator","Colors","FontAwesome","Ionicons","SimpleLineIcons","StackNav","ProfileScreen2","ManageProductScreen","useSelector","LoginScreen2","CategoriesBlogScreen","Storage","Tab","BottomNav","userInfo","setUserInfo","fetchProfile","info","getItem","key","JSON","parse","error","console","log","tabBarStyle","styles","tab","headerShown","tabBarHideOnKeyboard","tabBarActiveTintColor","tabBarInactiveTintColor","paddingBottom","tabBarIcon","focused","StyleSheet","create","elevation","backgroundColor","white","height"],"sources":["F:/DoAn/DACN1/ShopApp/src/Navigations/BottomNav.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Center } from \"native-base\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Colors from \"../color\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { FontAwesome, Ionicons, SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport StackNav from \"./StackNav\";\r\nimport ProfileScreen2 from \"../Screens/ProfileScreen2\";\r\nimport ManageProductScreen from \"../Screens/ManageProductScreen\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LoginScreen2 from \"../Screens/LoginScreen2\";\r\nimport CategoriesBlogScreen from \"../Screens/CategoriesBlogScreen\";\r\nimport { Storage } from \"expo-storage\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction BottomNav() {\r\n  const [userInfo, setUserInfo] = useState({});\r\n  const fetchProfile = async () => {\r\n    try {\r\n      const info = await Storage.getItem({ key: \"userInfo\" });\r\n      if (info != null) {\r\n        setUserInfo(JSON.parse(info));\r\n      } else {\r\n        setUserInfo(null);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      backBehavior=\"Trang chủ\"\r\n      initialRouteName=\"Trang chủ\"\r\n      screenOptions={{\r\n        tabBarStyle: { ...styles.tab },\r\n        headerShown: false,\r\n        tabBarHideOnKeyboard: true,\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Trang chủ\"\r\n        component={StackNav}\r\n        options={{\r\n          tabBarActiveTintColor: \"#FFA500\",\r\n          tabBarInactiveTintColor: \"gray\",\r\n          tabBarStyle: { paddingBottom: 5 },\r\n          tabBarIcon: ({ focused }) => (\r\n            <Center>\r\n              {focused ? (\r\n                <Ionicons name=\"home-sharp\" size={24} color=\"#FFA500\" />\r\n              ) : (\r\n                <Ionicons name=\"home-outline\" size={24} color=\"gray\" />\r\n              )}\r\n            </Center>\r\n          ),\r\n        }}\r\n      />\r\n      {/* Quản lí tin */}\r\n      <Tab.Screen\r\n        name=\"Quản lý tin\"\r\n        component={ManageProductScreen}\r\n        options={{\r\n          tabBarActiveTintColor: \"#FFA500\",\r\n          tabBarInactiveTintColor: \"gray\",\r\n          tabBarIcon: ({ focused }) => (\r\n            <Center>\r\n              {focused ? (\r\n                <Ionicons name=\"newspaper\" size={24} color=\"#FFA500\" />\r\n              ) : (\r\n                <Ionicons name=\"newspaper-outline\" size={24} color=\"gray\" />\r\n              )}\r\n            </Center>\r\n          ),\r\n        }}\r\n      />\r\n      {/* Đăng tin */}\r\n      <Tab.Screen\r\n        name=\"Đăng tin\"\r\n        component={CategoriesBlogScreen}\r\n        options={{\r\n          tabBarActiveTintColor: \"#FFA500\",\r\n          tabBarInactiveTintColor: \"gray\",\r\n          tabBarIcon: ({ focused }) => (\r\n            <Center>\r\n              {focused ? (\r\n                <SimpleLineIcons name=\"note\" size={24} color=\"#FFA500\" />\r\n              ) : (\r\n                <SimpleLineIcons name=\"note\" size={24} color=\"gray\" />\r\n              )}\r\n            </Center>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {/* Cá nhân */}\r\n\r\n      <Tab.Screen\r\n        name=\"Cá nhân\"\r\n        component={ProfileScreen2}\r\n        options={{\r\n          tabBarActiveTintColor: \"#FFA500\",\r\n          tabBarInactiveTintColor: \"gray\",\r\n          tabBarIcon: ({ focused }) => (\r\n            <Center>\r\n              {focused ? (\r\n                <FontAwesome name=\"user\" size={24} color=\"#FFA500\" />\r\n              ) : (\r\n                <FontAwesome name=\"user-o\" size={24} color=\"gray\" />\r\n              )}\r\n            </Center>\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tab: {\r\n    elevation: 0,\r\n    backgroundColor: Colors.white,\r\n    height: 50,\r\n  },\r\n});\r\n\r\nexport default BottomNav;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,MAAM;AAAiB;AAE9B,SAASC,WAAW,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC3E,OAAOC,QAAQ;AACf,OAAOC,cAAc;AACrB,OAAOC,mBAAmB;AAC1B,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,YAAY;AACnB,OAAOC,oBAAoB;AAC3B,SAASC,OAAO,QAAQ,cAAc;AAAC;AAAA;AAEvC,IAAMC,GAAG,GAAGZ,wBAAwB,EAAE;AAEtC,SAASa,SAAS,GAAG;EACnB,gBAAgCf,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAArCgB,QAAQ;IAAEC,WAAW;EAC5B,IAAMC,YAAY;IAAA,6BAAG,aAAY;MAC/B,IAAI;QACF,IAAMC,IAAI,SAASN,OAAO,CAACO,OAAO,CAAC;UAAEC,GAAG,EAAE;QAAW,CAAC,CAAC;QACvD,IAAIF,IAAI,IAAI,IAAI,EAAE;UAChBF,WAAW,CAACK,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;QAC/B,CAAC,MAAM;UACLF,WAAW,CAAC,IAAI,CAAC;QACnB;MACF,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAAA,gBAXKN,YAAY;MAAA;IAAA;EAAA,GAWjB;EAEDnB,SAAS,CAAC,YAAM;IACdmB,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,MAAC,GAAG,CAAC,SAAS;IACZ,YAAY,EAAC,gBAAW;IACxB,gBAAgB,EAAC,gBAAW;IAC5B,aAAa,EAAE;MACbS,WAAW,oBAAOC,MAAM,CAACC,GAAG,CAAE;MAC9BC,WAAW,EAAE,KAAK;MAClBC,oBAAoB,EAAE;IACxB,CAAE;IAAA,WAEF,KAAC,GAAG,CAAC,MAAM;MACT,IAAI,EAAC,gBAAW;MAChB,SAAS,EAAExB,QAAS;MACpB,OAAO,EAAE;QACPyB,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BN,WAAW,EAAE;UAAEO,aAAa,EAAE;QAAE,CAAC;QACjCC,UAAU,EAAE;UAAA,IAAGC,OAAO,SAAPA,OAAO;UAAA,OACpB,KAAC,MAAM;YAAA,UACJA,OAAO,GACN,KAAC,QAAQ;cAAC,IAAI,EAAC,YAAY;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAS,EAAG,GAExD,KAAC,QAAQ;cAAC,IAAI,EAAC,cAAc;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAM;UACrD,EACM;QAAA;MAEb;IAAE,EACF,EAEF,KAAC,GAAG,CAAC,MAAM;MACT,IAAI,EAAC,qBAAa;MAClB,SAAS,EAAE3B,mBAAoB;MAC/B,OAAO,EAAE;QACPuB,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BE,UAAU,EAAE;UAAA,IAAGC,OAAO,SAAPA,OAAO;UAAA,OACpB,KAAC,MAAM;YAAA,UACJA,OAAO,GACN,KAAC,QAAQ;cAAC,IAAI,EAAC,WAAW;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAS,EAAG,GAEvD,KAAC,QAAQ;cAAC,IAAI,EAAC,mBAAmB;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAM;UAC1D,EACM;QAAA;MAEb;IAAE,EACF,EAEF,KAAC,GAAG,CAAC,MAAM;MACT,IAAI,EAAC,oBAAU;MACf,SAAS,EAAExB,oBAAqB;MAChC,OAAO,EAAE;QACPoB,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BE,UAAU,EAAE;UAAA,IAAGC,OAAO,SAAPA,OAAO;UAAA,OACpB,KAAC,MAAM;YAAA,UACJA,OAAO,GACN,KAAC,eAAe;cAAC,IAAI,EAAC,MAAM;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAS,EAAG,GAEzD,KAAC,eAAe;cAAC,IAAI,EAAC,MAAM;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAM;UACpD,EACM;QAAA;MAEb;IAAE,EACF,EAIF,KAAC,GAAG,CAAC,MAAM;MACT,IAAI,EAAC,eAAS;MACd,SAAS,EAAE5B,cAAe;MAC1B,OAAO,EAAE;QACPwB,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BE,UAAU,EAAE;UAAA,IAAGC,OAAO,SAAPA,OAAO;UAAA,OACpB,KAAC,MAAM;YAAA,UACJA,OAAO,GACN,KAAC,WAAW;cAAC,IAAI,EAAC,MAAM;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAS,EAAG,GAErD,KAAC,WAAW;cAAC,IAAI,EAAC,QAAQ;cAAC,IAAI,EAAE,EAAG;cAAC,KAAK,EAAC;YAAM;UAClD,EACM;QAAA;MAEb;IAAE,EACF;EAAA,EACY;AAEpB;AAEA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAM,CAAC;EAC/BT,GAAG,EAAE;IACHU,SAAS,EAAE,CAAC;IACZC,eAAe,EAAErC,MAAM,CAACsC,KAAK;IAC7BC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAe3B,SAAS"},"metadata":{},"sourceType":"module"}