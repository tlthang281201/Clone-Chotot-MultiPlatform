{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onOpen\", \"trigger\", \"onClose\", \"isOpen\", \"children\", \"defaultIsOpen\", \"initialFocusRef\", \"finalFocusRef\", \"trapFocus\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, memo } from 'react';\nimport { Popper } from \"../Popper\";\nimport { mergeRefs } from \"../../../utils\";\nimport { useControllableState } from \"../../../hooks\";\nimport { PopoverContext } from \"./PopoverContext\";\nimport Box from \"../../primitives/Box\";\nimport Backdrop from \"../Backdrop\";\nimport { FocusScope } from '@react-native-aria/focus';\nimport { PresenceTransition } from \"../Transitions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useId } from '@react-aria/utils';\nimport { Overlay } from \"../../primitives/Overlay\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar Popover = function Popover(_ref, ref) {\n  var onOpen = _ref.onOpen,\n    trigger = _ref.trigger,\n    onClose = _ref.onClose,\n    isOpenProp = _ref.isOpen,\n    children = _ref.children,\n    defaultIsOpen = _ref.defaultIsOpen,\n    initialFocusRef = _ref.initialFocusRef,\n    finalFocusRef = _ref.finalFocusRef,\n    _ref$trapFocus = _ref.trapFocus,\n    trapFocus = _ref$trapFocus === void 0 ? true : _ref$trapFocus,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var triggerRef = React.useRef(null);\n  var mergedRef = mergeRefs([triggerRef]);\n  var _useControllableState = useControllableState({\n      value: isOpenProp,\n      defaultValue: defaultIsOpen,\n      onChange: function onChange(value) {\n        value ? onOpen && onOpen() : onClose && onClose();\n      }\n    }),\n    _useControllableState2 = _slicedToArray(_useControllableState, 2),\n    isOpen = _useControllableState2[0],\n    setIsOpen = _useControllableState2[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    bodyMounted = _React$useState2[0],\n    setBodyMounted = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    headerMounted = _React$useState4[0],\n    setHeaderMounted = _React$useState4[1];\n  var popoverContentId = \"\".concat(useId(), \"-content\");\n  var headerId = \"\".concat(popoverContentId, \"-header\");\n  var bodyId = \"\".concat(popoverContentId, \"-body\");\n  var handleOpen = React.useCallback(function () {\n    setIsOpen(true);\n  }, [setIsOpen]);\n  var updatedTrigger = function updatedTrigger() {\n    return trigger({\n      'ref': mergedRef,\n      'onPress': handleOpen,\n      'aria-expanded': isOpen ? true : false,\n      'aria-controls': isOpen ? popoverContentId : undefined,\n      'aria-haspopup': true\n    }, {\n      open: isOpen\n    });\n  };\n  var handleClose = function handleClose() {\n    setIsOpen(false);\n  };\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, {\n    ref: ref\n  }, updatedTrigger(), React.createElement(Overlay, {\n    isOpen: isOpen,\n    onRequestClose: handleClose,\n    useRNModalOnAndroid: true,\n    unmountOnExit: true\n  }, React.createElement(PresenceTransition, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1,\n      transition: {\n        duration: 150\n      }\n    },\n    exit: {\n      opacity: 0,\n      scale: 0.95,\n      transition: {\n        duration: 100\n      }\n    },\n    visible: isOpen,\n    style: StyleSheet.absoluteFill\n  }, React.createElement(Popper, _extends({\n    onClose: handleClose,\n    triggerRef: triggerRef\n  }, props), React.createElement(Backdrop, {\n    onPress: handleClose,\n    bg: \"transparent\"\n  }), React.createElement(PopoverContext.Provider, {\n    value: {\n      onClose: handleClose,\n      initialFocusRef: initialFocusRef,\n      finalFocusRef: finalFocusRef,\n      popoverContentId: popoverContentId,\n      bodyId: bodyId,\n      headerId: headerId,\n      headerMounted: headerMounted,\n      bodyMounted: bodyMounted,\n      setBodyMounted: setBodyMounted,\n      setHeaderMounted: setHeaderMounted,\n      isOpen: isOpen\n    }\n  }, React.createElement(FocusScope, {\n    contain: trapFocus,\n    restoreFocus: true,\n    autoFocus: true\n  }, children))))));\n};\nexport default memo(forwardRef(Popover));","map":{"version":3,"sources":["Popover.tsx"],"names":["React","forwardRef","memo","Popper","mergeRefs","useControllableState","PopoverContext","Box","Backdrop","FocusScope","PresenceTransition","useId","Overlay","useHasResponsiveProps","Popover","onOpen","trigger","onClose","isOpen","isOpenProp","children","defaultIsOpen","initialFocusRef","finalFocusRef","trapFocus","props","ref","triggerRef","useRef","mergedRef","setIsOpen","value","defaultValue","onChange","bodyMounted","setBodyMounted","useState","headerMounted","setHeaderMounted","popoverContentId","headerId","bodyId","handleOpen","useCallback","updatedTrigger","undefined","open","handleClose","opacity","transition","duration","scale","StyleSheet","absoluteFill"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Popper } from '../Popper';\nimport type { IPopoverProps } from './types';\nimport { mergeRefs } from '../../../utils';\nimport { useControllableState } from '../../../hooks';\nimport { PopoverContext } from './PopoverContext';\nimport Box from '../../primitives/Box';\nimport Backdrop from '../Backdrop';\nimport { FocusScope } from '@react-native-aria/focus';\nimport { PresenceTransition } from '../Transitions';\nimport { StyleSheet } from 'react-native';\nimport { useId } from '@react-aria/utils';\nimport { Overlay } from '../../primitives/Overlay';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Popover = (\n  {\n    onOpen,\n    trigger,\n    onClose,\n    isOpen: isOpenProp,\n    children,\n    defaultIsOpen,\n    initialFocusRef,\n    finalFocusRef,\n    trapFocus = true,\n    ...props\n  }: IPopoverProps,\n  ref: any\n) => {\n  const triggerRef = React.useRef(null);\n  const mergedRef = mergeRefs([triggerRef]);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const [bodyMounted, setBodyMounted] = React.useState(false);\n  const [headerMounted, setHeaderMounted] = React.useState(false);\n\n  const popoverContentId = `${useId()}-content`;\n  const headerId = `${popoverContentId}-header`;\n  const bodyId = `${popoverContentId}-body`;\n\n  const handleOpen = React.useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const updatedTrigger = () => {\n    return trigger(\n      {\n        'ref': mergedRef,\n        'onPress': handleOpen,\n        'aria-expanded': isOpen ? true : false,\n        'aria-controls': isOpen ? popoverContentId : undefined,\n        'aria-haspopup': true,\n      },\n      { open: isOpen }\n    );\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box ref={ref}>\n      {updatedTrigger()}\n      <Overlay\n        isOpen={isOpen}\n        onRequestClose={handleClose}\n        useRNModalOnAndroid\n        unmountOnExit\n      >\n        <PresenceTransition\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1, transition: { duration: 150 } }}\n          exit={{ opacity: 0, scale: 0.95, transition: { duration: 100 } }}\n          visible={isOpen}\n          style={StyleSheet.absoluteFill}\n        >\n          <Popper onClose={handleClose} triggerRef={triggerRef} {...props}>\n            <Backdrop onPress={handleClose} bg=\"transparent\" />\n            <PopoverContext.Provider\n              value={{\n                onClose: handleClose,\n                initialFocusRef,\n                finalFocusRef,\n                popoverContentId,\n                bodyId,\n                headerId,\n                headerMounted,\n                bodyMounted,\n                setBodyMounted,\n                setHeaderMounted,\n                isOpen,\n              }}\n            >\n              <FocusScope contain={trapFocus} restoreFocus autoFocus>\n                {children}\n              </FocusScope>\n            </PopoverContext.Provider>\n          </Popper>\n        </PresenceTransition>\n      </Overlay>\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Popover));\n"]},"metadata":{},"sourceType":"module"}