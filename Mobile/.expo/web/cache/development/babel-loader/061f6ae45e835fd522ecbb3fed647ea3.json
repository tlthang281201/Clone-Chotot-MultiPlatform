{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./slice\";\nexport var store = configureStore({\n  reducer: {\n    counter: counterReducer\n  }\n});","map":{"version":3,"names":["configureStore","counterReducer","store","reducer","counter"],"sources":["F:/DoAn/DACN1/ShopApp/src/Redux/Store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"./slice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n\r\n// import { Storage } from \"expo-storage\";\r\n// import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n// import thunk from \"redux-thunk\";\r\n// import { userLoginReducer } from \"./Reducers/UserReducers\";\r\n\r\n// const reducer = combineReducers({\r\n//   userLogin: userLoginReducer,\r\n// });\r\n\r\n// const getUser = async () => {\r\n//   const user = await Storage.getItem({ key: \"userInfo\" });\r\n//   if (user != null) {\r\n//     return JSON.parse(user);\r\n//   } else {\r\n//     return null;\r\n//   }\r\n// };\r\n\r\n// const userInfoFromLocalStorage = getUser();\r\n\r\n// const initialState = {\r\n//   userLogin: {\r\n//     userInfo: userInfoFromLocalStorage,\r\n//   },\r\n// };\r\n\r\n// const middleware = [thunk];\r\n// const store = createStore(\r\n//   reducer,\r\n//   initialState,\r\n//   applyMiddleware(...middleware)\r\n// );\r\n\r\n// export default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,cAAc;AAErB,OAAO,IAAMC,KAAK,GAAGF,cAAc,CAAC;EAClCG,OAAO,EAAE;IACPC,OAAO,EAAEH;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}