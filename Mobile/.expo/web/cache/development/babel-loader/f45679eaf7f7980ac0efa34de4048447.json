{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"max\", \"_avatar\", \"_hiddenAvatarPlaceholder\", \"isVertical\", \"space\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport isNil from 'lodash.isnil';\nimport { default as Avatar } from \"./Avatar\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar getAvatarGroupChildren = function getAvatarGroupChildren(children, space, max, _hiddenAvatarPlaceholder, _avatar, isVertical) {\n  var childrenArray = React.Children.toArray(children);\n  var plusAvatars = 0;\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n  var trailingChildren = childrenArray.slice(1);\n  var spacingProps = {\n    ml: isVertical ? 0 : space,\n    mt: isVertical ? space : 0\n  };\n  return [plusAvatars > 0 ? React.createElement(Avatar, _extends({}, spacingProps, _avatar, _hiddenAvatarPlaceholder), '+ ' + plusAvatars) : null, React.Children.map(trailingChildren.reverse(), function (child, index) {\n    return React.cloneElement(child, _objectSpread(_objectSpread(_objectSpread({\n      key: \"avatar-group-child-\".concat(index)\n    }, _avatar), spacingProps), child.props), child.props.children);\n  }), React.cloneElement(childrenArray[0], _objectSpread(_objectSpread({}, _avatar), childrenArray[0].props), childrenArray[0].props.children)];\n};\nvar AvatarGroup = function AvatarGroup(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _usePropsResolution = usePropsResolution('AvatarGroup', props),\n    max = _usePropsResolution.max,\n    _avatar = _usePropsResolution._avatar,\n    _hiddenAvatarPlaceholder = _usePropsResolution._hiddenAvatarPlaceholder,\n    isVertical = _usePropsResolution.isVertical,\n    space = _usePropsResolution.space,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), getAvatarGroupChildren(children, space, max, _hiddenAvatarPlaceholder, _avatar, isVertical));\n};\nexport default memo(forwardRef(AvatarGroup));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,GAAP;AACA,SAASC,kBAAT;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,SAASC,OAAO,IAAIC,MAApB;AACA,SAASC,qBAAT;;AAIA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,CAC1BC,QAD6B,EAE7BC,KAF6B,EAG7BC,GAH6B,EAI7BC,wBAJ6B,EAK7BC,OAL6B,EAM7BC,UAN6B,EAO1B;EACH,IAAIC,aAAkB,GAAGhB,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBR,QAAvB,CAAzB;EACA,IAAIS,WAAmB,GAAG,CAA1B;EACA,IAAI,CAACd,KAAK,CAACO,GAAD,CAAN,IAAeA,GAAG,GAAGI,aAAa,CAACI,MAAnC,IAA6CR,GAAG,GAAG,CAAvD,EAA0D;IACxDO,WAAW,GAAGH,aAAa,CAACI,MAAd,GAAuBR,GAArC;IACAI,aAAa,GAAGA,aAAa,CAACK,KAAd,CAAoB,CAApB,EAAuBT,GAAvB,CAAhB;EACD;EACD,IAAMU,gBAAgB,GAAGN,aAAa,CAACK,KAAd,CAAoB,CAApB,CAAzB;EACA,IAAME,YAAY,GAAG;IACnBC,EAAE,EAAET,UAAU,GAAG,CAAH,GAAOJ,KADF;IAEnBc,EAAE,EAAEV,UAAU,GAAGJ,KAAH,GAAW;EAFN,CAArB;EAIA,OAAO,CACLQ,WAAW,GAAG,CAAd,GACEnB,oBAACO,MAAD,eAAYgB,YAAZ,EAA8BT,OAA9B,EAA2CD,wBAA3C,GACG,OAAOM,WADV,CADF,GAII,IALC,EAMLnB,KAAK,CAACiB,QAAN,CAAeS,GAAf,CACEJ,gBAAgB,CAACK,OAAjB,EADF,EAEE,UAACC,KAAD,EAAaC,KAAb,EAA+B;IAC7B,OAAO7B,KAAK,CAAC8B,YAAN,CACLF,KADK;MAGHG,GAAG,+BAAwBF,KAAxB;IADL,GAEKf,OAFL,GAGKS,YAHL,GAIKK,KAAK,CAACI,QAEXJ,KAAK,CAACI,KAAN,CAAYtB,QARP,CAAP;EAUD,CAbH,CANK,EAqBLV,KAAK,CAAC8B,YAAN,CACEd,aAAa,CAAC,CAAD,CADf,kCAGOF,OADL,GAEKE,aAAa,CAAC,CAAD,CAAb,CAAiBgB,QAEtBhB,aAAa,CAAC,CAAD,CAAb,CAAiBgB,KAAjB,CAAuBtB,QANzB,CArBK,CAAP;AA8BD,CAjDD;AAmDA,IAAMuB,WAAW,GAAG,SAAdA,WAAW,OAA+CC,GAA5C,EAAyD;EAAA,IAAtDxB,QAAF,QAAEA,QAAF;IAAesB;EAClC,0BAOI5B,kBAAkB,CAAC,aAAD,EAAgB4B,KAAhB,CAPtB;IACEpB,GADI,uBACJA,GADI;IAEJE,OAFI,uBAEJA,OAFI;IAGJD,wBAHI,uBAGJA,wBAHI;IAIJE,UAJI,uBAIJA,UAJI;IAKJJ,KALI,uBAKJA,KALI;IAMDwB;;EAIL,IAAI3B,qBAAqB,CAACwB,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACEhC,oBAACG,GAAD,eAASgC,aAAT;IAAwBD,GAAG,EAAEA;EAA7B,IACGzB,sBAAsB,CACrBC,QADqB,EAErBC,KAFqB,EAGrBC,GAHqB,EAIrBC,wBAJqB,EAKrBC,OALqB,EAMrBC,UANqB,CADzB,CADF;AAYD,CA1BD;AA4BA,eAAed,IAAI,CAACC,UAAU,CAAC+B,WAAD,CAAX,CAAnB","names":["React","memo","forwardRef","Box","usePropsResolution","isNil","default","Avatar","useHasResponsiveProps","getAvatarGroupChildren","children","space","max","_hiddenAvatarPlaceholder","_avatar","isVertical","childrenArray","Children","toArray","plusAvatars","length","slice","trailingChildren","spacingProps","ml","mt","map","reverse","child","index","cloneElement","key","props","AvatarGroup","ref","resolvedProps"],"sources":["Group.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport isNil from 'lodash.isnil';\nimport type { IAvatarGroupProps } from './types';\nimport { default as Avatar } from './Avatar';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\n// Todo: Try using HStack instead\n\nconst getAvatarGroupChildren = (\n  children?: JSX.Element[] | JSX.Element,\n  space?: number,\n  max?: number,\n  _hiddenAvatarPlaceholder?: Object,\n  _avatar?: any,\n  isVertical?: Boolean\n) => {\n  let childrenArray: any = React.Children.toArray(children);\n  let plusAvatars: number = 0;\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n  const trailingChildren = childrenArray.slice(1);\n  const spacingProps = {\n    ml: isVertical ? 0 : space,\n    mt: isVertical ? space : 0,\n  };\n  return [\n    plusAvatars > 0 ? (\n      <Avatar {...spacingProps} {..._avatar} {..._hiddenAvatarPlaceholder}>\n        {'+ ' + plusAvatars}\n      </Avatar>\n    ) : null,\n    React.Children.map(\n      trailingChildren.reverse(),\n      (child: any, index: number) => {\n        return React.cloneElement(\n          child,\n          {\n            key: `avatar-group-child-${index}`,\n            ..._avatar,\n            ...spacingProps,\n            ...child.props,\n          },\n          child.props.children\n        );\n      }\n    ),\n    React.cloneElement(\n      childrenArray[0],\n      {\n        ..._avatar,\n        ...childrenArray[0].props,\n      },\n      childrenArray[0].props.children\n    ),\n  ];\n};\n\nconst AvatarGroup = ({ children, ...props }: IAvatarGroupProps, ref: any) => {\n  const {\n    max,\n    _avatar,\n    _hiddenAvatarPlaceholder,\n    isVertical,\n    space,\n    ...resolvedProps\n  } = usePropsResolution('AvatarGroup', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...resolvedProps} ref={ref}>\n      {getAvatarGroupChildren(\n        children,\n        space,\n        max,\n        _hiddenAvatarPlaceholder,\n        _avatar,\n        isVertical\n      )}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(AvatarGroup));\n"]},"metadata":{},"sourceType":"module"}