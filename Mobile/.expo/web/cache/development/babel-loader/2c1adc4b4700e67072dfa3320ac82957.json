{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport DatePickerIOS from \"./DatePickerIOS\";\nimport DatePickerAndroid from \"./DatePickerAndroid\";\nimport propTypes from \"./propTypes\";\nimport { colorToHex } from \"./colorToHex\";\nimport { throwIfInvalidProps } from \"./propChecker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DatePicker = Platform.select({\n  android: DatePickerAndroid,\n  ios: DatePickerIOS\n});\nDatePicker.propTypes = propTypes;\nvar DatePickerWrapper = function DatePickerWrapper(props) {\n  if (__DEV__) throwIfInvalidProps(props);\n  return _jsx(DatePicker, _objectSpread(_objectSpread({\n    ref: props.innerRef\n  }, props), {}, {\n    textColor: colorToHex(getTextColor(props)),\n    theme: getTheme(props),\n    fadeToColor: colorToHex(props.fadeToColor),\n    title: getTitle(props),\n    confirmText: props.confirmText ? props.confirmText : 'Confirm',\n    cancelText: props.cancelText ? props.cancelText : 'Cancel',\n    androidVariant: getAndroidVariant(props),\n    minuteInterval: props.minuteInterval ? props.minuteInterval : 1,\n    mode: props.mode ? props.mode : 'datetime'\n  }));\n};\nvar getTheme = function getTheme(props) {\n  if (props.theme) return props.theme;\n  if (!Appearance) return 'auto';\n  return Appearance.getColorScheme();\n};\nvar getTextColor = function getTextColor(props) {\n  if (props.textColor) return props.textColor;\n  var darkTheme = getTheme(props) === 'dark';\n  if (darkTheme) return 'white';\n  return undefined;\n};\nvar getAndroidVariant = function getAndroidVariant(props) {\n  var modal = props.modal,\n    androidVariant = props.androidVariant;\n  if (androidVariant) return androidVariant;\n  return modal ? 'nativeAndroid' : 'iosClone';\n};\nvar getTitle = function getTitle(props) {\n  var title = props.title,\n    mode = props.mode;\n  if (title === null) return '';\n  if (title) return title;\n  if (mode === 'time') return 'Select time';\n  return 'Select date';\n};\nexport default React.memo(DatePickerWrapper);","map":{"version":3,"names":["React","DatePickerIOS","DatePickerAndroid","propTypes","colorToHex","throwIfInvalidProps","DatePicker","Platform","select","android","ios","DatePickerWrapper","props","__DEV__","innerRef","getTextColor","getTheme","fadeToColor","getTitle","confirmText","cancelText","getAndroidVariant","minuteInterval","mode","theme","Appearance","getColorScheme","textColor","darkTheme","undefined","modal","androidVariant","title","memo"],"sources":["F:/DoAn/DACN1/ShopApp/node_modules/react-native-date-picker/src/index.js"],"sourcesContent":["import React from 'react'\nimport { Platform, Appearance } from 'react-native'\nimport DatePickerIOS from './DatePickerIOS'\nimport DatePickerAndroid from './DatePickerAndroid'\nimport propTypes from './propTypes'\nimport { colorToHex } from './colorToHex'\nimport { throwIfInvalidProps } from './propChecker'\n\nconst DatePicker = Platform.select({\n  android: DatePickerAndroid,\n  ios: DatePickerIOS,\n})\n\nDatePicker.propTypes = propTypes\n\nconst DatePickerWrapper = (props) => {\n  if (__DEV__) throwIfInvalidProps(props)\n  return (\n    <DatePicker\n      ref={props.innerRef}\n      {...props}\n      textColor={colorToHex(getTextColor(props))}\n      theme={getTheme(props)}\n      fadeToColor={colorToHex(props.fadeToColor)}\n      title={getTitle(props)}\n      confirmText={props.confirmText ? props.confirmText : 'Confirm'}\n      cancelText={props.cancelText ? props.cancelText : 'Cancel'}\n      androidVariant={getAndroidVariant(props)}\n      minuteInterval={props.minuteInterval ? props.minuteInterval : 1}\n      mode={props.mode ? props.mode : 'datetime'}\n    />\n  )\n}\n\nconst getTheme = (props) => {\n  if (props.theme) return props.theme\n  if (!Appearance) return 'auto'\n  return Appearance.getColorScheme()\n}\n\nconst getTextColor = (props) => {\n  if (props.textColor) return props.textColor\n  const darkTheme = getTheme(props) === 'dark'\n  if (darkTheme) return 'white'\n  return undefined\n}\n\nconst getAndroidVariant = (props) => {\n  const { modal, androidVariant } = props\n  if (androidVariant) return androidVariant\n  return modal ? 'nativeAndroid' : 'iosClone'\n}\n\nconst getTitle = (props) => {\n  const { title, mode } = props\n  if (title === null) return ''\n  if (title) return title\n  if (mode === 'time') return 'Select time'\n  return 'Select date'\n}\n\nexport default React.memo(DatePickerWrapper)\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAEzB,OAAOC,aAAa;AACpB,OAAOC,iBAAiB;AACxB,OAAOC,SAAS;AAChB,SAASC,UAAU;AACnB,SAASC,mBAAmB;AAAuB;AAEnD,IAAMC,UAAU,GAAGC,QAAQ,CAACC,MAAM,CAAC;EACjCC,OAAO,EAAEP,iBAAiB;EAC1BQ,GAAG,EAAET;AACP,CAAC,CAAC;AAEFK,UAAU,CAACH,SAAS,GAAGA,SAAS;AAEhC,IAAMQ,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,KAAK,EAAK;EACnC,IAAIC,OAAO,EAAER,mBAAmB,CAACO,KAAK,CAAC;EACvC,OACE,KAAC,UAAU;IACT,GAAG,EAAEA,KAAK,CAACE;EAAS,GAChBF,KAAK;IACT,SAAS,EAAER,UAAU,CAACW,YAAY,CAACH,KAAK,CAAC,CAAE;IAC3C,KAAK,EAAEI,QAAQ,CAACJ,KAAK,CAAE;IACvB,WAAW,EAAER,UAAU,CAACQ,KAAK,CAACK,WAAW,CAAE;IAC3C,KAAK,EAAEC,QAAQ,CAACN,KAAK,CAAE;IACvB,WAAW,EAAEA,KAAK,CAACO,WAAW,GAAGP,KAAK,CAACO,WAAW,GAAG,SAAU;IAC/D,UAAU,EAAEP,KAAK,CAACQ,UAAU,GAAGR,KAAK,CAACQ,UAAU,GAAG,QAAS;IAC3D,cAAc,EAAEC,iBAAiB,CAACT,KAAK,CAAE;IACzC,cAAc,EAAEA,KAAK,CAACU,cAAc,GAAGV,KAAK,CAACU,cAAc,GAAG,CAAE;IAChE,IAAI,EAAEV,KAAK,CAACW,IAAI,GAAGX,KAAK,CAACW,IAAI,GAAG;EAAW,GAC3C;AAEN,CAAC;AAED,IAAMP,QAAQ,GAAG,SAAXA,QAAQ,CAAIJ,KAAK,EAAK;EAC1B,IAAIA,KAAK,CAACY,KAAK,EAAE,OAAOZ,KAAK,CAACY,KAAK;EACnC,IAAI,CAACC,UAAU,EAAE,OAAO,MAAM;EAC9B,OAAOA,UAAU,CAACC,cAAc,EAAE;AACpC,CAAC;AAED,IAAMX,YAAY,GAAG,SAAfA,YAAY,CAAIH,KAAK,EAAK;EAC9B,IAAIA,KAAK,CAACe,SAAS,EAAE,OAAOf,KAAK,CAACe,SAAS;EAC3C,IAAMC,SAAS,GAAGZ,QAAQ,CAACJ,KAAK,CAAC,KAAK,MAAM;EAC5C,IAAIgB,SAAS,EAAE,OAAO,OAAO;EAC7B,OAAOC,SAAS;AAClB,CAAC;AAED,IAAMR,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIT,KAAK,EAAK;EACnC,IAAQkB,KAAK,GAAqBlB,KAAK,CAA/BkB,KAAK;IAAEC,cAAc,GAAKnB,KAAK,CAAxBmB,cAAc;EAC7B,IAAIA,cAAc,EAAE,OAAOA,cAAc;EACzC,OAAOD,KAAK,GAAG,eAAe,GAAG,UAAU;AAC7C,CAAC;AAED,IAAMZ,QAAQ,GAAG,SAAXA,QAAQ,CAAIN,KAAK,EAAK;EAC1B,IAAQoB,KAAK,GAAWpB,KAAK,CAArBoB,KAAK;IAAET,IAAI,GAAKX,KAAK,CAAdW,IAAI;EACnB,IAAIS,KAAK,KAAK,IAAI,EAAE,OAAO,EAAE;EAC7B,IAAIA,KAAK,EAAE,OAAOA,KAAK;EACvB,IAAIT,IAAI,KAAK,MAAM,EAAE,OAAO,aAAa;EACzC,OAAO,aAAa;AACtB,CAAC;AAED,eAAevB,KAAK,CAACiC,IAAI,CAACtB,iBAAiB,CAAC"},"metadata":{},"sourceType":"module"}